{
    "project": {
        "name": "Thrust JS Framework",
        "description": "Launch into a new world with thrust-js getting your application upto speed.",
        "version": "0.1.0",
        "url": "thrust-home"
    },
    "files": {
        "src\\data\\convention\\start.js": {
            "name": "src\\data\\convention\\start.js",
            "modules": {
                "thrust.data.convention": 1
            },
            "classes": {},
            "fors": {
                "thrust.data.convention": 1
            },
            "namespaces": {}
        },
        "src\\data\\config.js": {
            "name": "src\\data\\config.js",
            "modules": {
                "thrust.data.config": 1
            },
            "classes": {},
            "fors": {
                "thrust.data.config": 1
            },
            "namespaces": {}
        },
        "src\\data\\event.factory.js": {
            "name": "src\\data\\event.factory.js",
            "modules": {
                "thrust.data": 1
            },
            "classes": {},
            "fors": {
                "thrust.data": 1
            },
            "namespaces": {}
        },
        "src\\data\\event.types.js": {
            "name": "src\\data\\event.types.js",
            "modules": {},
            "classes": {},
            "fors": {
                "thrust.data": 1
            },
            "namespaces": {}
        },
        "src\\data\\main.js": {
            "name": "src\\data\\main.js",
            "modules": {},
            "classes": {
                "thrust.data.DataFacade": 1,
                "thrust.data.Data": 1
            },
            "fors": {
                "thrust.data": 1,
                "thrust.data.Data": 1,
                "thrust.data.DataFacade": 1
            },
            "namespaces": {}
        },
        "src\\data\\response.queue.js": {
            "name": "src\\data\\response.queue.js",
            "modules": {},
            "classes": {
                "thrust.data.ResponseQueue": 1
            },
            "fors": {
                "thrust.data": 1
            },
            "namespaces": {}
        },
        "src\\dom\\convention\\action.js": {
            "name": "src\\dom\\convention\\action.js",
            "modules": {
                "thrust.dom.convention": 1
            },
            "classes": {},
            "fors": {
                "thrust.dom.convention": 1
            },
            "namespaces": {}
        },
        "src\\dom\\convention\\context.js": {
            "name": "src\\dom\\convention\\context.js",
            "modules": {},
            "classes": {},
            "fors": {
                "thrust.dom.convention": 1
            },
            "namespaces": {}
        },
        "src\\dom\\convention\\event.js": {
            "name": "src\\dom\\convention\\event.js",
            "modules": {},
            "classes": {},
            "fors": {
                "thrust.dom.convention": 1
            },
            "namespaces": {}
        },
        "src\\dom\\config.js": {
            "name": "src\\dom\\config.js",
            "modules": {
                "thrust.dom.config": 1
            },
            "classes": {},
            "fors": {
                "thrust.dom.config": 1
            },
            "namespaces": {}
        },
        "src\\mediator\\convention\\autostart.js": {
            "name": "src\\mediator\\convention\\autostart.js",
            "modules": {
                "thrust.mediator.convention": 1
            },
            "classes": {},
            "fors": {
                "thrust.mediator.convention": 1
            },
            "namespaces": {}
        },
        "src\\mediator\\convention\\container.js": {
            "name": "src\\mediator\\convention\\container.js",
            "modules": {},
            "classes": {},
            "fors": {
                "thrust.mediator.convention": 1
            },
            "namespaces": {}
        },
        "src\\mediator\\convention\\dependant.modules.js": {
            "name": "src\\mediator\\convention\\dependant.modules.js",
            "modules": {},
            "classes": {},
            "fors": {
                "thrust.mediator.convention": 1
            },
            "namespaces": {}
        },
        "src\\mediator\\convention\\subscription.js": {
            "name": "src\\mediator\\convention\\subscription.js",
            "modules": {},
            "classes": {},
            "fors": {
                "thrust.mediator.convention": 1
            },
            "namespaces": {}
        },
        "src\\mediator\\config.js": {
            "name": "src\\mediator\\config.js",
            "modules": {
                "thrust.mediator.config": 1
            },
            "classes": {},
            "fors": {
                "thrust.mediator.config": 1
            },
            "namespaces": {}
        },
        "src\\mediator\\main.js": {
            "name": "src\\mediator\\main.js",
            "modules": {},
            "classes": {
                "thrust.mediator.MediatorFacade": 1,
                "thrust.mediator.Mediator": 1
            },
            "fors": {
                "thrust.mediator": 1,
                "thrust.mediator.MediatorFacade": 1,
                "thrust.mediator.Mediator": 1
            },
            "namespaces": {}
        },
        "src\\spa\\convention\\spalink.js": {
            "name": "src\\spa\\convention\\spalink.js",
            "modules": {},
            "classes": {},
            "fors": {
                "thrust.dom.convention": 1
            },
            "namespaces": {}
        },
        "src\\spa\\convention\\start.js": {
            "name": "src\\spa\\convention\\start.js",
            "modules": {
                "thrust.spa.convention": 1
            },
            "classes": {},
            "fors": {
                "thrust.spa.convention": 1
            },
            "namespaces": {}
        },
        "src\\spa\\config.js": {
            "name": "src\\spa\\config.js",
            "modules": {
                "thrust.spa.config": 1
            },
            "classes": {},
            "fors": {
                "thrust.spa.config": 1
            },
            "namespaces": {}
        },
        "src\\spa\\main.js": {
            "name": "src\\spa\\main.js",
            "modules": {},
            "classes": {
                "thrust.spa.SinglePageApp": 1
            },
            "fors": {
                "thrust.spa": 1,
                "thrust.spa.SinglePageApp": 1
            },
            "namespaces": {}
        },
        "src\\template\\convention\\knockout.engine.js": {
            "name": "src\\template\\convention\\knockout.engine.js",
            "modules": {
                "thrust.template.convention": 1
            },
            "classes": {},
            "fors": {
                "thrust.template.convention": 1
            },
            "namespaces": {}
        },
        "src\\template\\convention\\template.js": {
            "name": "src\\template\\convention\\template.js",
            "modules": {},
            "classes": {},
            "fors": {
                "thrust.template.convention": 1
            },
            "namespaces": {}
        },
        "src\\template\\config.js": {
            "name": "src\\template\\config.js",
            "modules": {
                "thrust.template.config": 1
            },
            "classes": {},
            "fors": {
                "thrust.template.config": 1
            },
            "namespaces": {}
        },
        "src\\template\\main.js": {
            "name": "src\\template\\main.js",
            "modules": {
                "thrust.template": 1
            },
            "classes": {
                "thrust.template.Template": 1,
                "thrust.template.TemplateFacade": 1
            },
            "fors": {
                "thrust.template": 1,
                "thrust.template.Template": 1,
                "thrust.template.TemplateFacade": 1
            },
            "namespaces": {}
        },
        "src\\util\\array.js": {
            "name": "src\\util\\array.js",
            "modules": {
                "thrust.util.array": 1
            },
            "classes": {},
            "fors": {
                "thrust.util.array": 1
            },
            "namespaces": {}
        },
        "src\\util\\collection.js": {
            "name": "src\\util\\collection.js",
            "modules": {
                "thrust.util.collection": 1
            },
            "classes": {},
            "fors": {
                "thrust.util.collection": 1
            },
            "namespaces": {}
        },
        "src\\util\\function.js": {
            "name": "src\\util\\function.js",
            "modules": {
                "thrust.util.func": 1
            },
            "classes": {},
            "fors": {
                "thrust.util.func": 1
            },
            "namespaces": {}
        },
        "src\\util\\guid.js": {
            "name": "src\\util\\guid.js",
            "modules": {
                "thrust.util": 1
            },
            "classes": {},
            "fors": {
                "thrust.util": 1
            },
            "namespaces": {}
        },
        "src\\util\\main.js": {
            "name": "src\\util\\main.js",
            "modules": {},
            "classes": {
                "thrust.util": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\util\\object.js": {
            "name": "src\\util\\object.js",
            "modules": {
                "thrust.util.obj": 1
            },
            "classes": {},
            "fors": {
                "thrust.util.obj": 1
            },
            "namespaces": {}
        },
        "src\\util\\string.js": {
            "name": "src\\util\\string.js",
            "modules": {},
            "classes": {},
            "fors": {
                "thrust.util": 1
            },
            "namespaces": {}
        },
        "src\\util\\type.js": {
            "name": "src\\util\\type.js",
            "modules": {
                "thrust.util.type": 1
            },
            "classes": {},
            "fors": {
                "thrust.util.type": 1
            },
            "namespaces": {}
        },
        "src\\util\\url.js": {
            "name": "src\\util\\url.js",
            "modules": {
                "thrust.util.url": 1
            },
            "classes": {},
            "fors": {
                "thrust.util.url": 1
            },
            "namespaces": {}
        },
        "src\\util\\when.js": {
            "name": "src\\util\\when.js",
            "modules": {
                "thrust.util.when": 1
            },
            "classes": {},
            "fors": {
                "thrust.util.when": 1
            },
            "namespaces": {}
        },
        "src\\config.js": {
            "name": "src\\config.js",
            "modules": {
                "thrust.config": 1
            },
            "classes": {},
            "fors": {
                "thrust.config": 1
            },
            "namespaces": {}
        },
        "src\\convention.js": {
            "name": "src\\convention.js",
            "modules": {},
            "classes": {
                "thrust.Convention": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\events.js": {
            "name": "src\\events.js",
            "modules": {},
            "classes": {
                "thrust.Events": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\facade.js": {
            "name": "src\\facade.js",
            "modules": {},
            "classes": {
                "thrust.Facade": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\ignite.js": {
            "name": "src\\ignite.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\instance.js": {
            "name": "src\\instance.js",
            "modules": {},
            "classes": {},
            "fors": {
                "thrust.instance": 1
            },
            "namespaces": {}
        },
        "src\\log.js": {
            "name": "src\\log.js",
            "modules": {},
            "classes": {
                "thrust.Log": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\main.js": {
            "name": "src\\main.js",
            "modules": {
                "thrust": 1
            },
            "classes": {
                "thrust.Thrust": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\module.js": {
            "name": "src\\module.js",
            "modules": {},
            "classes": {
                "thrust.Module": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "thrust.data": {
            "name": "thrust.data",
            "submodules": {
                "thrust.data.convention": 1,
                "thrust.data.config": 1
            },
            "classes": {
                "thrust.data.convention": 1,
                "thrust.data.config": 1,
                "thrust.data": 1,
                "thrust.data.DataFacade": 1,
                "thrust.data.Data": 1,
                "thrust.data.ResponseQueue": 1
            },
            "fors": {
                "thrust.data.convention": 1,
                "thrust.data.config": 1,
                "thrust.data": 1,
                "thrust.data.Data": 1,
                "thrust.data.DataFacade": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "src\\data\\response.queue.js",
            "line": 50,
            "description": "The event factory links jQuery Events up to thrust centric events.\nThe event factory would be replaced if we were ever moved off of the jQuery dependancy."
        },
        "thrust.data.convention": {
            "name": "thrust.data.convention",
            "submodules": {},
            "classes": {
                "thrust.data.convention": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.data",
            "namespace": "",
            "file": "src\\data\\convention\\start.js",
            "line": 21
        },
        "thrust.data.config": {
            "name": "thrust.data.config",
            "submodules": {},
            "classes": {
                "thrust.data.config": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.data",
            "namespace": "",
            "file": "src\\data\\config.js",
            "line": 3,
            "description": "Provides thrust configuration"
        },
        "thrust.dom": {
            "name": "thrust.dom",
            "submodules": {
                "thrust.dom.convention": 1,
                "thrust.dom.config": 1
            },
            "classes": {
                "thrust.dom.convention": 1,
                "thrust.dom.config": 1
            },
            "fors": {
                "thrust.dom.convention": 1,
                "thrust.dom.config": 1
            },
            "namespaces": {}
        },
        "thrust.dom.convention": {
            "name": "thrust.dom.convention",
            "submodules": {},
            "classes": {
                "thrust.dom.convention": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.dom",
            "namespace": "",
            "file": "src\\dom\\convention\\action.js",
            "line": 62
        },
        "thrust.dom.config": {
            "name": "thrust.dom.config",
            "submodules": {},
            "classes": {
                "thrust.dom.config": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.dom",
            "namespace": "",
            "file": "src\\dom\\config.js",
            "line": 3,
            "description": "Provides thrust configuration"
        },
        "thrust.mediator": {
            "name": "thrust.mediator",
            "submodules": {
                "thrust.mediator.convention": 1,
                "thrust.mediator.config": 1
            },
            "classes": {
                "thrust.mediator.convention": 1,
                "thrust.mediator.config": 1,
                "thrust.mediator": 1,
                "thrust.mediator.MediatorFacade": 1,
                "thrust.mediator.Mediator": 1
            },
            "fors": {
                "thrust.mediator.convention": 1,
                "thrust.mediator.config": 1,
                "thrust.mediator": 1,
                "thrust.mediator.MediatorFacade": 1,
                "thrust.mediator.Mediator": 1
            },
            "namespaces": {},
            "file": "src\\mediator\\main.js",
            "line": 85
        },
        "thrust.mediator.convention": {
            "name": "thrust.mediator.convention",
            "submodules": {},
            "classes": {
                "thrust.mediator.convention": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.mediator",
            "namespace": "",
            "file": "src\\mediator\\convention\\autostart.js",
            "line": 4,
            "description": "The facade convention, creates the mediator facade for each module."
        },
        "thrust.mediator.config": {
            "name": "thrust.mediator.config",
            "submodules": {},
            "classes": {
                "thrust.mediator.config": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.mediator",
            "namespace": "",
            "file": "src\\mediator\\config.js",
            "line": 3,
            "description": "Provides thrust configuration"
        },
        "thrust.spa": {
            "name": "thrust.spa",
            "submodules": {
                "thrust.spa.convention": 1,
                "thrust.spa.config": 1
            },
            "classes": {
                "thrust.spa.convention": 1,
                "thrust.spa.config": 1,
                "thrust.spa": 1,
                "thrust.spa.SinglePageApp": 1
            },
            "fors": {
                "thrust.spa.convention": 1,
                "thrust.spa.config": 1,
                "thrust.spa": 1,
                "thrust.spa.SinglePageApp": 1
            },
            "namespaces": {},
            "file": "src\\spa\\main.js",
            "line": 52
        },
        "thrust.spa.convention": {
            "name": "thrust.spa.convention",
            "submodules": {},
            "classes": {
                "thrust.spa.convention": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.spa",
            "namespace": "",
            "file": "src\\spa\\convention\\start.js",
            "line": 4
        },
        "thrust.spa.config": {
            "name": "thrust.spa.config",
            "submodules": {},
            "classes": {
                "thrust.spa.config": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.spa",
            "namespace": "",
            "file": "src\\spa\\config.js",
            "line": 3,
            "description": "Provides thrust configuration"
        },
        "thrust.template": {
            "name": "thrust.template",
            "submodules": {
                "thrust.template.convention": 1,
                "thrust.template.config": 1
            },
            "classes": {
                "thrust.template.convention": 1,
                "thrust.template.config": 1,
                "thrust.template": 1,
                "thrust.template.Template": 1,
                "thrust.template.TemplateFacade": 1
            },
            "fors": {
                "thrust.template.convention": 1,
                "thrust.template.config": 1,
                "thrust.template": 1,
                "thrust.template.Template": 1,
                "thrust.template.TemplateFacade": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "src\\template\\main.js",
            "line": 296,
            "requires": [
                "thrust.data"
            ]
        },
        "thrust.template.convention": {
            "name": "thrust.template.convention",
            "submodules": {},
            "classes": {
                "thrust.template.convention": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.template",
            "namespace": "",
            "file": "src\\template\\convention\\knockout.engine.js",
            "line": 102
        },
        "thrust.template.config": {
            "name": "thrust.template.config",
            "submodules": {},
            "classes": {
                "thrust.template.config": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.template",
            "namespace": "",
            "file": "src\\template\\config.js",
            "line": 3,
            "description": "Provides thrust configuration"
        },
        "thrust.util": {
            "name": "thrust.util",
            "submodules": {
                "thrust.util.array": 1,
                "thrust.util.collection": 1,
                "thrust.util.func": 1,
                "thrust.util.obj": 1,
                "thrust.util.type": 1,
                "thrust.util.url": 1,
                "thrust.util.when": 1
            },
            "classes": {
                "thrust.util.array": 1,
                "thrust.util.collection": 1,
                "thrust.util.func": 1,
                "thrust.util": 1,
                "thrust.util.obj": 1,
                "thrust.util.type": 1,
                "thrust.util.url": 1,
                "thrust.util.when": 1
            },
            "fors": {
                "thrust.util.array": 1,
                "thrust.util.collection": 1,
                "thrust.util.func": 1,
                "thrust.util": 1,
                "thrust.util.obj": 1,
                "thrust.util.type": 1,
                "thrust.util.url": 1,
                "thrust.util.when": 1
            },
            "namespaces": {},
            "module": "thrust.util",
            "file": "src\\util\\main.js",
            "line": 22
        },
        "thrust.util.array": {
            "name": "thrust.util.array",
            "submodules": {},
            "classes": {
                "thrust.util.array": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.util",
            "namespace": "",
            "file": "src\\util\\array.js",
            "line": 4
        },
        "thrust.util.collection": {
            "name": "thrust.util.collection",
            "submodules": {},
            "classes": {
                "thrust.util.collection": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.util",
            "namespace": "",
            "file": "src\\util\\collection.js",
            "line": 5
        },
        "thrust.util.func": {
            "name": "thrust.util.func",
            "submodules": {},
            "classes": {
                "thrust.util.func": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.util",
            "namespace": "",
            "file": "src\\util\\function.js",
            "line": 4
        },
        "thrust.util.obj": {
            "name": "thrust.util.obj",
            "submodules": {},
            "classes": {
                "thrust.util.obj": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.util",
            "namespace": "",
            "file": "src\\util\\object.js",
            "line": 4
        },
        "thrust.util.type": {
            "name": "thrust.util.type",
            "submodules": {},
            "classes": {
                "thrust.util.type": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.util",
            "namespace": "",
            "file": "src\\util\\type.js",
            "line": 5
        },
        "thrust.util.url": {
            "name": "thrust.util.url",
            "submodules": {},
            "classes": {
                "thrust.util.url": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.util",
            "namespace": "",
            "file": "src\\util\\url.js",
            "line": 4
        },
        "thrust.util.when": {
            "name": "thrust.util.when",
            "submodules": {},
            "classes": {
                "thrust.util.when": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust.util",
            "namespace": "",
            "file": "src\\util\\when.js",
            "line": 4
        },
        "thrust": {
            "name": "thrust",
            "submodules": {
                "thrust.config": 1
            },
            "classes": {
                "thrust.config": 1,
                "thrust.Convention": 1,
                "thrust.Events": 1,
                "thrust.Facade": 1,
                "thrust.instance": 1,
                "thrust.Log": 1,
                "thrust.Thrust": 1,
                "thrust.Module": 1
            },
            "fors": {
                "thrust.config": 1,
                "thrust.instance": 1
            },
            "namespaces": {},
            "tag": "main",
            "file": "src\\module.js",
            "line": 37,
            "description": "The thrust application!",
            "itemtype": "main",
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance",
                    "type": "Thrust"
                },
                {
                    "name": "def",
                    "description": "The module definition",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "The module name.",
                    "type": "String",
                    "optional": true
                }
            ]
        },
        "thrust.config": {
            "name": "thrust.config",
            "submodules": {},
            "classes": {
                "thrust.config": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "thrust",
            "namespace": "",
            "file": "src\\config.js",
            "line": 4,
            "description": "Provides thrust configuration"
        }
    },
    "classes": {
        "thrust.data.convention": {
            "name": "thrust.data.convention",
            "shortname": "thrust.data.convention",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.data",
            "submodule": "thrust.data.convention",
            "namespace": ""
        },
        "thrust.data.config": {
            "name": "thrust.data.config",
            "shortname": "thrust.data.config",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.data",
            "submodule": "thrust.data.config",
            "namespace": ""
        },
        "thrust.data": {
            "name": "thrust.data",
            "shortname": "thrust.data",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.data",
            "namespace": ""
        },
        "thrust.data.DataFacade": {
            "name": "thrust.data.DataFacade",
            "shortname": "thrust.data.DataFacade",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.data",
            "namespace": "",
            "file": "src\\data\\main.js",
            "line": 43,
            "description": "The data facade that is handed off to modules.\n\n\nEnables data transport, using jQuery for thrust.",
            "params": [
                {
                    "name": "module",
                    "description": "The module to create the facade for",
                    "type": "thrust.Module"
                },
                {
                    "name": "parent",
                    "description": "The parent thrust data object to create the facade for.",
                    "type": "thrust.data.Data"
                }
            ],
            "is_constructor": 1
        },
        "thrust.data.Data": {
            "name": "thrust.data.Data",
            "shortname": "thrust.data.Data",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "thrust.template.Template"
            ],
            "module": "thrust.data",
            "namespace": "",
            "file": "src\\data\\main.js",
            "line": 71,
            "description": "The master data plugin.\n\n\nEnables data transport, using jQuery for thrust.",
            "params": [
                {
                    "name": "name",
                    "description": "The thrust instance name.",
                    "type": "String"
                },
                {
                    "name": "mediator",
                    "description": "The thrust mediator instance.",
                    "type": "thrust.mediator.Mediator"
                },
                {
                    "name": "config",
                    "description": "The thrust instance configuration.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "thrust.data.ResponseQueue": {
            "name": "thrust.data.ResponseQueue",
            "shortname": "thrust.data.ResponseQueue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.data",
            "namespace": "",
            "file": "src\\data\\response.queue.js",
            "line": 50,
            "description": "The response queue class handles creation of a queue or batching system.\nWith this system, we can batch up all our server requests, and request them from the server all around the same time.\nIn addition to that, when the requests come back we can also spool them together, so that the calls don't resolve until\neither all the calls come back, or a specific time has elapsed.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "module",
                    "description": "The module to create the response queue for",
                    "type": "thrust.Module"
                },
                {
                    "name": "startTimeout",
                    "description": "The time to wait for additional requests.",
                    "type": "Number"
                },
                {
                    "name": "finishTimeout",
                    "description": "The maximum time to wait for requests to return.",
                    "type": "Number"
                }
            ]
        },
        "thrust.dom.convention": {
            "name": "thrust.dom.convention",
            "shortname": "thrust.dom.convention",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.dom",
            "submodule": "thrust.dom.convention",
            "namespace": ""
        },
        "thrust.dom.config": {
            "name": "thrust.dom.config",
            "shortname": "thrust.dom.config",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.dom",
            "submodule": "thrust.dom.config",
            "namespace": ""
        },
        "thrust.mediator.convention": {
            "name": "thrust.mediator.convention",
            "shortname": "thrust.mediator.convention",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.mediator",
            "submodule": "thrust.mediator.convention",
            "namespace": ""
        },
        "thrust.mediator.config": {
            "name": "thrust.mediator.config",
            "shortname": "thrust.mediator.config",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.mediator",
            "submodule": "thrust.mediator.config",
            "namespace": ""
        },
        "thrust.mediator": {
            "name": "thrust.mediator",
            "shortname": "thrust.mediator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.mediator",
            "namespace": ""
        },
        "thrust.mediator.MediatorFacade": {
            "name": "thrust.mediator.MediatorFacade",
            "shortname": "thrust.mediator.MediatorFacade",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.mediator",
            "namespace": "",
            "file": "src\\mediator\\main.js",
            "line": 17,
            "description": "Creates a new mediator facade for the given module.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "module",
                    "description": "The module to create the facade for",
                    "type": "thrust.Module"
                },
                {
                    "name": "parent",
                    "description": "The parent mediator to create the facade on.",
                    "type": "thrust.Mediator"
                }
            ]
        },
        "thrust.mediator.Mediator": {
            "name": "thrust.mediator.Mediator",
            "shortname": "thrust.mediator.Mediator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.mediator",
            "namespace": "",
            "file": "src\\mediator\\main.js",
            "line": 85,
            "description": "Mediator class.\nThis creates a instance of the mediator, for use inside thrust.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the mediator.",
                    "type": "String"
                }
            ]
        },
        "thrust.spa.convention": {
            "name": "thrust.spa.convention",
            "shortname": "thrust.spa.convention",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.spa",
            "submodule": "thrust.spa.convention",
            "namespace": ""
        },
        "thrust.spa.config": {
            "name": "thrust.spa.config",
            "shortname": "thrust.spa.config",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.spa",
            "submodule": "thrust.spa.config",
            "namespace": ""
        },
        "thrust.spa": {
            "name": "thrust.spa",
            "shortname": "thrust.spa",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.spa",
            "namespace": ""
        },
        "thrust.spa.SinglePageApp": {
            "name": "thrust.spa.SinglePageApp",
            "shortname": "thrust.spa.SinglePageApp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.spa",
            "namespace": "",
            "file": "src\\spa\\main.js",
            "line": 52,
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "The thrust instance configuration",
                    "type": "Object"
                },
                {
                    "name": "instanceName",
                    "description": "The thrust instance name",
                    "type": "String"
                },
                {
                    "name": "mediator",
                    "description": "The thrust instance mediator",
                    "type": "thrust.mediatorMediator"
                }
            ]
        },
        "thrust.template.convention": {
            "name": "thrust.template.convention",
            "shortname": "thrust.template.convention",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.template",
            "submodule": "thrust.template.convention",
            "namespace": ""
        },
        "thrust.template.config": {
            "name": "thrust.template.config",
            "shortname": "thrust.template.config",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.template",
            "submodule": "thrust.template.config",
            "namespace": ""
        },
        "thrust.template": {
            "name": "thrust.template",
            "shortname": "thrust.template",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.template",
            "namespace": ""
        },
        "thrust.template.Template": {
            "name": "thrust.template.Template",
            "shortname": "thrust.template.Template",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.template",
            "namespace": "",
            "file": "src\\template\\main.js",
            "line": 47,
            "description": "The template plugin consturctor.",
            "params": [
                {
                    "name": "config",
                    "description": "The thrust config object",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "The thrust data instance",
                    "type": "Object"
                }
            ],
            "uses": [
                "thrust.data.Data"
            ],
            "is_constructor": 1
        },
        "thrust.template.TemplateFacade": {
            "name": "thrust.template.TemplateFacade",
            "shortname": "thrust.template.TemplateFacade",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.template",
            "namespace": "",
            "file": "src\\template\\main.js",
            "line": 296,
            "is_constructor": 1,
            "params": [
                {
                    "name": "module",
                    "description": "The module to create the facade for",
                    "type": "thrust.Module"
                },
                {
                    "name": "parent",
                    "description": "The template instance to create the facade for.",
                    "type": "thrust.template.Template"
                }
            ]
        },
        "thrust.util.array": {
            "name": "thrust.util.array",
            "shortname": "thrust.util.array",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.util",
            "submodule": "thrust.util.array",
            "namespace": ""
        },
        "thrust.util.collection": {
            "name": "thrust.util.collection",
            "shortname": "thrust.util.collection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.util",
            "submodule": "thrust.util.collection",
            "namespace": ""
        },
        "thrust.util.func": {
            "name": "thrust.util.func",
            "shortname": "thrust.util.func",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.util",
            "submodule": "thrust.util.func",
            "namespace": ""
        },
        "thrust.util": {
            "name": "thrust.util",
            "shortname": "thrust.util",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.util",
            "submodule": "thrust.util",
            "namespace": "",
            "file": "src\\util\\main.js",
            "line": 22,
            "uses": [
                "thrust-util.array",
                "thrust-util.collection",
                "thrust-util.func",
                "thrust-util.obj",
                "thrust-util.type",
                "thrust-util.url",
                "thrust-util.when"
            ]
        },
        "thrust.util.obj": {
            "name": "thrust.util.obj",
            "shortname": "thrust.util.obj",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.util",
            "submodule": "thrust.util.obj",
            "namespace": ""
        },
        "thrust.util.type": {
            "name": "thrust.util.type",
            "shortname": "thrust.util.type",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.util",
            "submodule": "thrust.util.type",
            "namespace": ""
        },
        "thrust.util.url": {
            "name": "thrust.util.url",
            "shortname": "thrust.util.url",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.util",
            "submodule": "thrust.util.url",
            "namespace": ""
        },
        "thrust.util.when": {
            "name": "thrust.util.when",
            "shortname": "thrust.util.when",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust.util",
            "submodule": "thrust.util.when",
            "namespace": ""
        },
        "thrust.config": {
            "name": "thrust.config",
            "shortname": "thrust.config",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust",
            "submodule": "thrust.config",
            "namespace": ""
        },
        "thrust.Convention": {
            "name": "thrust.Convention",
            "shortname": "thrust.Convention",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust",
            "namespace": "",
            "file": "src\\convention.js",
            "line": 12,
            "description": "The convention class, takes an overloaded set of methods, for any method that needs to be overloaded.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "methods",
                    "description": "An object of applicable methods.",
                    "type": "Object"
                }
            ]
        },
        "thrust.Events": {
            "name": "thrust.Events",
            "shortname": "thrust.Events",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust",
            "namespace": "",
            "file": "src\\events.js",
            "line": 213,
            "description": "Thrust Events are based off of the Backbone event model, with special additions.\n\n* Events can be fired asyncronously.\n* Events can be namespaced."
        },
        "thrust.Facade": {
            "name": "thrust.Facade",
            "shortname": "thrust.Facade",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust",
            "namespace": "",
            "file": "src\\facade.js",
            "line": 15,
            "description": "Facades are mainly for use in thrust plugins.\n\nFacade has these built in methods:\n* init\n* start\n* ready\n* stop\n* destroy\n\nBehind the scenes the facade methods, invoke any conventions loaded for the plugin."
        },
        "thrust.instance": {
            "name": "thrust.instance",
            "shortname": "thrust.instance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust",
            "namespace": ""
        },
        "thrust.Log": {
            "name": "thrust.Log",
            "shortname": "thrust.Log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust",
            "namespace": "",
            "file": "src\\log.js",
            "line": 54,
            "description": "A basic logger for the thrust framework.\n    Disables debug logging when thrust is not in debug mode."
        },
        "thrust.Thrust": {
            "name": "thrust.Thrust",
            "shortname": "thrust.Thrust",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust",
            "namespace": "",
            "file": "src\\main.js",
            "line": 40,
            "description": "The primary thrust class.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of this thrust instance",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Thrust"
            }
        },
        "thrust.Module": {
            "name": "thrust.Module",
            "shortname": "thrust.Module",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "thrust",
            "namespace": "",
            "file": "src\\module.js",
            "line": 37,
            "description": "The module is the heart of the thrust, every module gets one facade per module."
        }
    },
    "classitems": [
        {
            "file": "src\\data\\convention\\start.js",
            "line": 26,
            "description": "# __thrust/data__ Convention - Start\nThe data start convention, delays thrusts ready (orbit) event, until a timeout, or all the calls return, which ever happens first.\nThis convention allows your applicfation to delay it's loading, until all the data that is required to be preloaded has ben loaded.\n\n## Why is this useful?\nTake an example you have a complex application, that needs data from several different API's. Perhaps you're loading tweets from twitter,\n user profile information from your server, and the pages main content.\n\nThe typical page will load and do all it's operations on DOM Ready, and fire off it's data requests.  You then perhaps have a loader up\n on the tweet box, and the users profile picture.\n\nA Thrust base page, will have an overall loader up.  As it starts up the modules, any module that fires off a data request will have that\n request captured.  Once all requests have been completed, thrust completes loading, and any modules that were expecting data, will have it\n immediately with their ready call.\n\n\n##That's cool, but what if I need a long running call?\n\nThat's a good point sometimes your application does not need to be blocked, maybe you expect that call to be long running, or you don't\n really know if it'll be long running or not.  Using data plugin API you can pass the following option, and the queue will be bypassed.\n\n   { silent: true }",
            "itemtype": "property",
            "name": "start",
            "class": "thrust.data.convention",
            "module": "thrust.data",
            "submodule": "thrust.data.convention"
        },
        {
            "file": "src\\data\\config.js",
            "line": 12,
            "description": "Resolves the given properties when creating an instance of the plugin.\n\nThis is for internal thrust use.  Thrust uses this array to generate the properties that need to be handed\nto the plugin constructor method.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "resolve",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.data.config",
            "module": "thrust.data",
            "submodule": "thrust.data.config"
        },
        {
            "file": "src\\data\\config.js",
            "line": 25,
            "description": "Decides if `thrust/data` should cache requests or not.\n\nYou should turn this to `false`, if you are experiencing caching issues and need to debug.",
            "itemtype": "property",
            "name": "cache",
            "readonly": "",
            "type": "{Boolean}",
            "default": "true",
            "class": "thrust.data.config",
            "module": "thrust.data",
            "submodule": "thrust.data.config"
        },
        {
            "file": "src\\data\\config.js",
            "line": 36,
            "description": "`startTimeout` is part of queueing built into `thrust/data`.  It defines the wait time before requests\n are started.\n\nThe queueing system works in the followig manner.  All requests that are queued together per HTTP\n request method (`GET`, `POST`, `PUT`, `DELETE`, `PATCH`, etc).  After the first request, the timer\n starts, once the timeout elapses, all the requests are shipped off at once.\n\nThis counter intuitive if you're looking to get the request back immediately, but from a UX perspective\n this allows the UI to stay in sync and give the user a cohesive, instead of seeing loaders, show up and\n disappear at seemingly random intervals, the user does an action, and then sees a response.",
            "itemtype": "property",
            "name": "startTimeout",
            "readonly": "",
            "type": "{Number}",
            "default": "500",
            "class": "thrust.data.config",
            "module": "thrust.data",
            "submodule": "thrust.data.config"
        },
        {
            "file": "src\\data\\config.js",
            "line": 58,
            "description": "`finishTimeout` is part of queueing built into `thrust/data`.  It defines the wait time before the\n queue is completed.  If all the requests finish early, the timeout is canceled.\n\nThe queueing system works in the followig manner.  All requests that are queued together per HTTP\n request method (`GET`, `POST`, `PUT`, `DELETE`, `PATCH`, etc).  After the requests are fired off\n `thrust/data` will wait until it gets a response from everyone of them.  If for some reason a request\n takes to long, and the timeout is hit, all the requests that have completed, will be releaseed, allowing\n the application to continue undisrupted.\n\nThis counter intuitive if you're looking to get the request back immediately, but from a UX perspective\n this allows the UI to stay in sync and give the user a cohesive, instead of seeing loaders, show up and\n disappear at seemingly random intervals, the user does an action, and then sees a response.",
            "itemtype": "property",
            "name": "finishTimeout",
            "readonly": "",
            "type": "{Number}",
            "default": "2000",
            "class": "thrust.data.config",
            "module": "thrust.data",
            "submodule": "thrust.data.config"
        },
        {
            "file": "src\\data\\config.js",
            "line": 82,
            "description": "The set of conventions to load into thrust/dom.",
            "itemtype": "property",
            "name": "conventions",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.data.config",
            "module": "thrust.data",
            "submodule": "thrust.data.config"
        },
        {
            "file": "src\\data\\event.factory.js",
            "line": 74,
            "description": "Binds all the jQuery data events and creates event native thrust events out of them.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "A",
                    "description": "jQuery instance wrapping 'document'",
                    "type": "JQuery"
                }
            ],
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.factory.js",
            "line": 96,
            "description": "Wraps beforeSend, which is a custom property on the jQuery ajax data call.",
            "itemtype": "method",
            "name": "beforeSendMethod",
            "access": "private",
            "tagname": "",
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.types.js",
            "line": 7,
            "description": "The `thrust/data/wait` event is fired once a data call is made.",
            "itemtype": "event",
            "name": "thrust/data/wait",
            "params": [
                {
                    "name": "queryId",
                    "description": "The internal id of the outbound queue.",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The type of the outbound event queue (Get/Post/etc)",
                    "type": "String"
                }
            ],
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.types.js",
            "line": 15,
            "description": "The `thrust/data/start` event is fired the queue is started.",
            "itemtype": "event",
            "name": "thrust/data/start",
            "params": [
                {
                    "name": "queryId",
                    "description": "The internal id of the outbound queue.",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The type of the outbound event queue (Get/Post/etc)",
                    "type": "String"
                },
                {
                    "name": "count",
                    "description": "The outgoing call count",
                    "type": "Number"
                }
            ],
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.types.js",
            "line": 24,
            "description": "The `thrust/data/status` event is fired for every item that returns from the queue.\n\nNOTE: It is entirely possible for `thrust/data/status** to be called after `thrust/data/stop** if several\n    calls take to long to complete.  This is intended, and potentially useful information.",
            "itemtype": "event",
            "name": "thrust/data/status",
            "params": [
                {
                    "name": "queryId",
                    "description": "The internal id of the outbound queue.",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The type of the outbound event queue (Get/Post/etc)",
                    "type": "String"
                },
                {
                    "name": "count",
                    "description": "The current completed call count for this queue.",
                    "type": "Number"
                }
            ],
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.types.js",
            "line": 36,
            "description": "The `thrust/data/stop` event is fired when all items in the queue return, or the finishedTimeout setting elapses.",
            "itemtype": "event",
            "name": "thrust/data/stop",
            "params": [
                {
                    "name": "queryId",
                    "description": "The internal id of the outbound queue.",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The type of the outbound event queue (Get/Post/etc)",
                    "type": "String"
                },
                {
                    "name": "count",
                    "description": "The (current) completed call count for this queue.",
                    "type": "Number"
                }
            ],
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.types.js",
            "line": 46,
            "description": "The `thrust/data/event/before-send` event is wrapped by thrust, and fired through jQuery.\n\n\nNOTE: Marked as private because this event exposes underlying jQuery arguments, and may\nbe changed in the future.",
            "itemtype": "event",
            "name": "thrust/data/event/before-send",
            "access": "private",
            "tagname": "",
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.types.js",
            "line": 57,
            "description": "The `thrust/data/event/start` event is wrapped by thrust, and fired through jQuery.\n\n\nNOTE: Marked as private because this event exposes underlying jQuery arguments, and may\nbe changed in the future.",
            "itemtype": "event",
            "name": "thrust/data/event/start",
            "access": "private",
            "tagname": "",
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.types.js",
            "line": 68,
            "description": "The `thrust/data/event/send` event is wrapped by thrust, and fired through jQuery.\n\n\nNOTE: Marked as private because this event exposes underlying jQuery arguments, and may\nbe changed in the future.",
            "itemtype": "event",
            "name": "thrust/data/event/send",
            "access": "private",
            "tagname": "",
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.types.js",
            "line": 79,
            "description": "The `thrust/data/event/error` event is wrapped by thrust, and fired through jQuery.\n\n\nNOTE: Marked as private because this event exposes underlying jQuery arguments, and may\nbe changed in the future.",
            "itemtype": "event",
            "name": "thrust/data/event/error",
            "access": "private",
            "tagname": "",
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.types.js",
            "line": 90,
            "description": "The `thrust/data/event/success` event is wrapped by thrust, and fired through jQuery.\n\n\nNOTE: Marked as private because this event exposes underlying jQuery arguments, and may\nbe changed in the future.",
            "itemtype": "event",
            "name": "thrust/data/event/success",
            "access": "private",
            "tagname": "",
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.types.js",
            "line": 101,
            "description": "The `thrust/data/event/complete` event is wrapped by thrust, and fired through jQuery.\n\n\nNOTE: Marked as private because this event exposes underlying jQuery arguments, and may\nbe changed in the future.",
            "itemtype": "event",
            "name": "thrust/data/event/complete",
            "access": "private",
            "tagname": "",
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\event.types.js",
            "line": 112,
            "description": "The `thrust/data/event/stop` event is wrapped by thrust, and fired through jQuery.\n\n\nNOTE: Marked as private because this event exposes underlying jQuery arguments, and may\nbe changed in the future.",
            "itemtype": "event",
            "name": "thrust/data/event/stop",
            "access": "private",
            "tagname": "",
            "class": "thrust.data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\main.js",
            "line": 117,
            "description": "Creates a DataFacade for the given module.",
            "itemtype": "method",
            "name": "createFacade",
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance",
                    "type": "Thrust"
                },
                {
                    "name": "module",
                    "description": "The module",
                    "type": "Module"
                },
                {
                    "name": "facades",
                    "description": "The available facades",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The new DataFacade",
                "type": "DataFacade"
            },
            "class": "thrust.data.Data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\main.js",
            "line": 146,
            "description": "Does a GET to the server, for the given data and settings.",
            "itemtype": "method",
            "name": "getData",
            "params": [
                {
                    "name": "url",
                    "description": "The url to get data from",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data to pass to the given url",
                    "type": "Object"
                },
                {
                    "name": "settings",
                    "description": "The settings of the task to be done",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "Do we cache this call or not.",
                            "type": "Boolean"
                        },
                        {
                            "name": "silent",
                            "description": "Do we use the built in data queue.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The promise if this request completes or fails",
                "type": "Promise"
            },
            "class": "thrust.data.Data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\main.js",
            "line": 158,
            "description": "Does a GET to the server, for the given data and settings.",
            "itemtype": "method",
            "name": "getData",
            "params": [
                {
                    "name": "url",
                    "description": "The url to get data from",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data to pass to the given url",
                    "type": "Object"
                },
                {
                    "name": "settings",
                    "description": "The settings of the task to be done",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "Do we cache this call or not.",
                            "type": "Boolean"
                        },
                        {
                            "name": "silent",
                            "description": "Do we use the built in data queue.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The promise if this request completes or fails",
                "type": "Promise"
            },
            "class": "thrust.data.DataFacade",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\main.js",
            "line": 175,
            "description": "Does a POST to the server, for the given data and settings.",
            "itemtype": "method",
            "name": "postData",
            "params": [
                {
                    "name": "url",
                    "description": "The url to get data from",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data to pass to the given url",
                    "type": "Object"
                },
                {
                    "name": "settings",
                    "description": "The settings of the task to be done",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "Do we cache this call or not.",
                            "type": "Boolean"
                        },
                        {
                            "name": "silent",
                            "description": "Do we use the built in data queue.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The promise if this request completes or fails",
                "type": "Promise"
            },
            "class": "thrust.data.Data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\main.js",
            "line": 187,
            "description": "Does a POST to the server, for the given data and settings.",
            "itemtype": "method",
            "name": "postData",
            "params": [
                {
                    "name": "url",
                    "description": "The url to get data from",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data to pass to the given url",
                    "type": "Object"
                },
                {
                    "name": "settings",
                    "description": "The settings of the task to be done",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "Do we cache this call or not.",
                            "type": "Boolean"
                        },
                        {
                            "name": "silent",
                            "description": "Do we use the built in data queue.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The promise if this request completes or fails",
                "type": "Promise"
            },
            "class": "thrust.data.DataFacade",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\main.js",
            "line": 204,
            "description": "Does a GET to the server, using the given settings.\n\nData must be passed in using settings: { data: {} } otherwise use getData.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "url",
                    "description": "The url to get data from",
                    "type": "String"
                },
                {
                    "name": "settings",
                    "description": "The settings of the task to be done",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "Do we cache this call or not.",
                            "type": "Boolean"
                        },
                        {
                            "name": "silent",
                            "description": "Do we use the built in data queue.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The promise if this request completes or fails",
                "type": "Promise"
            },
            "class": "thrust.data.Data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\main.js",
            "line": 217,
            "description": "Does a GET to the server, using the given settings.\n\nData must be passed in using settings: { data: {} } otherwise use getData.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "url",
                    "description": "The url to get data from",
                    "type": "String"
                },
                {
                    "name": "settings",
                    "description": "The settings of the task to be done",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "Do we cache this call or not.",
                            "type": "Boolean"
                        },
                        {
                            "name": "silent",
                            "description": "Do we use the built in data queue.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The promise if this request completes or fails",
                "type": "Promise"
            },
            "class": "thrust.data.DataFacade",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\main.js",
            "line": 245,
            "description": "Does a POST to the server, using the given settings.\n\nData must be passed in using settings: { data: {} } otherwise use postData.",
            "itemtype": "method",
            "name": "post",
            "params": [
                {
                    "name": "url",
                    "description": "The url to get data from",
                    "type": "String"
                },
                {
                    "name": "settings",
                    "description": "The settings of the task to be done",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "Do we cache this call or not.",
                            "type": "Boolean"
                        },
                        {
                            "name": "silent",
                            "description": "Do we use the built in data queue.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The promise if this request completes or fails",
                "type": "Promise"
            },
            "class": "thrust.data.Data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\main.js",
            "line": 258,
            "description": "Does a POST to the server, using the given settings.\n\nData must be passed in using settings: { data: {} } otherwise use postData.",
            "itemtype": "method",
            "name": "post",
            "params": [
                {
                    "name": "url",
                    "description": "The url to get data from",
                    "type": "String"
                },
                {
                    "name": "settings",
                    "description": "The settings of the task to be done",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "Do we cache this call or not.",
                            "type": "Boolean"
                        },
                        {
                            "name": "silent",
                            "description": "Do we use the built in data queue.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The promise if this request completes or fails",
                "type": "Promise"
            },
            "class": "thrust.data.DataFacade",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\main.js",
            "line": 286,
            "description": "Does an ajax call to the given url, with the given settings.",
            "itemtype": "method",
            "name": "ajax",
            "params": [
                {
                    "name": "url",
                    "description": "The url to get data from",
                    "type": "String"
                },
                {
                    "name": "settings",
                    "description": "The settings of the task to be done",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "Do we cache this call or not.",
                            "type": "Boolean"
                        },
                        {
                            "name": "silent",
                            "description": "Do we use the built in data queue.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The promise if this request completes or fails",
                "type": "Promise"
            },
            "class": "thrust.data.Data",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\main.js",
            "line": 297,
            "description": "Does an ajax call to the given url, with the given settings.",
            "itemtype": "method",
            "name": "ajax",
            "params": [
                {
                    "name": "url",
                    "description": "The url to get data from",
                    "type": "String"
                },
                {
                    "name": "settings",
                    "description": "The settings of the task to be done",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "Do we cache this call or not.",
                            "type": "Boolean"
                        },
                        {
                            "name": "silent",
                            "description": "Do we use the built in data queue.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The promise if this request completes or fails",
                "type": "Promise"
            },
            "class": "thrust.data.DataFacade",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\response.queue.js",
            "line": 71,
            "description": "Adds a request to the queue\nQueues are split up by HTTP type, so GET requests go with GET requests and POST requests go with POST requests.",
            "itemtype": "method",
            "name": "addToQueue",
            "params": [
                {
                    "name": "type",
                    "description": "The request type (POST, GET, etc)",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "The request url to queue up",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "The request options.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The promise that will resolve or reject, when the request is completed.",
                "type": "Promise"
            },
            "class": "thrust.data.ResponseQueue",
            "module": "thrust.data"
        },
        {
            "file": "src\\data\\response.queue.js",
            "line": 129,
            "description": "Returns a function, that will process the given queue after the start time has elapsed.",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "type",
                    "description": "The queue type, to process.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The function that will do the work on the queue.",
                "type": "Function"
            },
            "class": "thrust.data.ResponseQueue",
            "module": "thrust.data"
        },
        {
            "file": "src\\dom\\convention\\action.js",
            "line": 67,
            "description": "# __thrust/dom__ Convention - Actions\n\nThe dom action convention allows you to create custom actions, that execute when a certian event happen.\n\n\n## Supported events\n* `click`\n\nNOTE: More events will be added when they make sense to add them.\n\n\nThe definition can accept all of the following:\n\n* `function()` - This function will be run when the action is invoked.\n* `string` - This string must point at a function, that exists on the module definition.\n* `[function(), context]` - Where the context is the context that the function will be called with.\n* `[string, context]` - Where the context is the context that the function will be called with.\n\n\nThe definition that is used to define an action is below...\n\nNOTE: The below is written as if it were part of a module definition.\n\n\n    actions: {\n        'click': {\n            'doFunction': function()\n            {\n                alert('My awesome alert here!');\n            },\n            'doString': 'actionString',\n            'doContextFunction': [function()\n            {\n                alert('My awesome alert here!');\n            }, context],\n            'doString': ['actionString', context],\n        }\n    },\n    actionString: function()\n    {\n        alert('My awesome alert here!');\n    }\n\nTo utlize the action, simply add a `data-action-{event}` attribute, with the name of the action as the va;ie to any of the following elements:\n\n* `a`\n* `button`\n* `input[type=\"button\"]`\n* `input[type=\"submit\"]`",
            "itemtype": "property",
            "name": "actions",
            "class": "thrust.dom.convention",
            "module": "thrust.dom",
            "submodule": "thrust.dom.convention"
        },
        {
            "file": "src\\dom\\convention\\context.js",
            "line": 12,
            "description": "# __thrust/dom__ Convention - Context\n\nThe context convention allows you to specific a selector for your module.  This selector can be anything that is compatable with jQuerys Sizzle engine.\n\nThen the default context of your modules `dom()` / `$()` will be that selector.  In addition any internal find `dom.find` / `dom.$` / `$.find` / `dom.$`,\nwill also have the selector as the root context.\n\n\n    {\n        context: '#myDiv'\n    }",
            "itemtype": "property",
            "name": "context",
            "class": "thrust.dom.convention",
            "module": "thrust.dom",
            "submodule": "thrust.dom.convention"
        },
        {
            "file": "src\\dom\\convention\\event.js",
            "line": 18,
            "description": "# __thrust/dom__ Convention - Events\n\nThe dom events convention, allows you to automatically bind events for your module.  Using this module you can bind common events like\nmouse over, click, etc, to a method or handler.\n\nThe definition can accept all of the following:\n\n* `function()` - This function will be run when the event is invoked.\n* `string` - This string must point at a function, that exists on the module definition.\n* `[function(), context]` - Where the context is the context that the function will be called with.\n* `[string, context]` - Where the context is the context that the function will be called with.\n* `[selector, function(), context]` - Where the selector is a jquery delegate selector.\n* `[selector, string, context]` - Where the selector is a jquery delegate selector.\n\n\nThe following is an example of the events block in your module...\n\n\n     events: {\n         'focus': function() { alert('Test Function'); },\n         'mouseover': 'mouseOver',\n         'click': ['li', function() { alert('Test function'); }]\n     },\n     mouseOver: function() { alert('Test Function'); },",
            "itemtype": "property",
            "name": "events",
            "class": "thrust.dom.convention",
            "module": "thrust.dom",
            "submodule": "thrust.dom.convention"
        },
        {
            "file": "src\\dom\\config.js",
            "line": 12,
            "description": "Resolves the given properties when creating an instance of the plugin.\n\nThis is for internal thrust use.  Thrust uses this array to generate the properties that need to be handed\nto the plugin constructor method.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "resolve",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.dom.config",
            "module": "thrust.dom",
            "submodule": "thrust.dom.config"
        },
        {
            "file": "src\\dom\\config.js",
            "line": 25,
            "description": "The set of conventions to load into thrust/dom.",
            "itemtype": "property",
            "name": "conventions",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.dom.config",
            "module": "thrust.dom",
            "submodule": "thrust.dom.config"
        },
        {
            "file": "src\\mediator\\convention\\autostart.js",
            "line": 9,
            "description": "# __thrust/mediator__ Convention - Auto Start\n\nThe auto start property allows for a module, to be automatically started once it is\nincluded into a thrust instnace, without having to explicity call start on the module.\n\n\nThis is useful for certian types of modules, usually persistant ones that always need to load regardless.\nFor example a navigation module, or user settings module.",
            "itemtype": "property",
            "name": "autoStart",
            "class": "thrust.mediator.convention",
            "module": "thrust.mediator",
            "submodule": "thrust.mediator.convention"
        },
        {
            "file": "src\\mediator\\convention\\container.js",
            "line": 20,
            "description": "# __thrust/mediator__ Convention - Container\n\nThe `container` convention allows you to define a virtual `container`, for your modules to go in.\nConceptually only one module can be in the box at once, so when one module starts, if the `container`\nalready has a module in it, that module will be shutdown and replaced by this module.\n\n\nThis convention lets you not worry about cleaning up your mess, you can just focus on what modules\nneed to start, and if you have any common modules, like a main module area, it will swap automatically.\n\n\n    container: 'main',\n\n\nAny other module that also loads with container `main` will then get loaded into the container, and the\ncurrently active module will be stopped.",
            "itemtype": "property",
            "name": "container",
            "class": "thrust.mediator.convention",
            "module": "thrust.mediator",
            "submodule": "thrust.mediator.convention"
        },
        {
            "file": "src\\mediator\\convention\\dependant.modules.js",
            "line": 35,
            "description": "# __thrust/mediator__ Convention - Dependant Modules\n\nThe dependant module convention introduces two properties to a module.\n\n`dependantModules` {Array}<br />\nThese are modules that must be started along side your module, but aren't required to be stopped with your module.\nAs an example you have an alerts module, this gives you alerts at the top of your page.  Your account settings module\nmay be dependant on alerts, so it can fire events into the module, but alerts is not bound to the life cycle of your settings module.\n\n\n`childModules` {Array}<br />\nThese are modules that must be started and stopped along side your module.  An example of this would be a context module\nthat perhaps gives changes state to an object that is clicked in your module.",
            "itemtype": "property",
            "name": "modules",
            "class": "thrust.mediator.convention",
            "module": "thrust.mediator",
            "submodule": "thrust.mediator.convention"
        },
        {
            "file": "src\\mediator\\convention\\subscription.js",
            "line": 19,
            "description": "# __thrust/mediator__ Convention - Subscriptions\n\nThe `subscriptions` property defines, predefined subscriptions for a module, and their appropriate definition\n\nBy default the context of the subscription method, when run, will be your module,\n    it can be optionally defined by passing in an array.\n\n\nThe definition can accept all of the following:\n\n* `function()` - This function will be run when the event is invoked.\n* `string` - This string must point at a function, that exists on the module definition.\n* `[function(), context]` - Where the context is the context that the function will be called with.\n* `[string, context]` - Where the context is the context that the function will be called with.\n\n\nThe following is an exmaple of the events block in your module...\n\n\n    subscription: {\n        'event/area/name': myMethodHere,\n        'event/area/name2': 'methodDefinedOnTheModule',\n        'event/area/name3': [myMethodHere, myMethodContext],\n        'event/area/name4': ['methondDefinedOnTheModule', myMethodContext]\n    }",
            "itemtype": "property",
            "name": "subscriptions",
            "class": "thrust.mediator.convention",
            "module": "thrust.mediator",
            "submodule": "thrust.mediator.convention"
        },
        {
            "file": "src\\mediator\\config.js",
            "line": 13,
            "description": "Resolves the given properties when creating an instance of the plugin.\n\nThis is for internal thrust use.  Thrust uses this array to generate the properties that need to be handed\nto the plugin constructor method.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "resolve",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.mediator.config",
            "module": "thrust.mediator",
            "submodule": "thrust.mediator.config"
        },
        {
            "file": "src\\mediator\\config.js",
            "line": 26,
            "description": "The set of conventions to load into thrust/mediator.",
            "itemtype": "property",
            "name": "conventions",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.mediator.config",
            "module": "thrust.mediator",
            "submodule": "thrust.mediator.config"
        },
        {
            "file": "src\\mediator\\main.js",
            "line": 37,
            "description": "During the start of a mediator facade, start creates the internal subscriptions array.",
            "itemtype": "method",
            "name": "start",
            "class": "thrust.mediator.MediatorFacade",
            "module": "thrust.mediator"
        },
        {
            "file": "src\\mediator\\main.js",
            "line": 49,
            "description": "Overrides the subscribe method, and tracks the any event that is bound.",
            "itemtype": "method",
            "name": "subscribe",
            "class": "thrust.mediator.MediatorFacade",
            "module": "thrust.mediator"
        },
        {
            "file": "src\\mediator\\main.js",
            "line": 61,
            "description": "Unsubscribes from all events that were subscribed to.",
            "itemtype": "method",
            "name": "stop",
            "class": "thrust.mediator.MediatorFacade",
            "module": "thrust.mediator"
        },
        {
            "file": "src\\mediator\\main.js",
            "line": 113,
            "description": "Creates a new MediatorFacade, based on the given module.",
            "itemtype": "method",
            "name": "createFacade",
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance",
                    "type": "thrust.Thrust"
                },
                {
                    "name": "module",
                    "description": "The module to create the facade for",
                    "type": "thrust.Module"
                },
                {
                    "name": "facades",
                    "description": "The facades already added for this module.",
                    "type": "Object"
                }
            ],
            "class": "thrust.mediator.Mediator",
            "module": "thrust.mediator"
        },
        {
            "file": "src\\spa\\convention\\spalink.js",
            "line": 24,
            "description": "# __thrust/dom__ Convention - Single Page App Link\n\nRequires thrust/dom",
            "itemtype": "property",
            "name": "spa;ink",
            "class": "thrust.dom.convention",
            "module": "thrust.dom",
            "submodule": "thrust.dom.convention"
        },
        {
            "file": "src\\spa\\convention\\start.js",
            "line": 9,
            "description": "# __thrust/spa__ Convention - Start\n\nThe single page app start convention, does the actual starting of the plugin, in addition it also delays\nfull orbit, until any module it has started has been loaded.",
            "itemtype": "property",
            "name": "start",
            "class": "thrust.spa.convention",
            "module": "thrust.spa",
            "submodule": "thrust.spa.convention"
        },
        {
            "file": "src\\spa\\config.js",
            "line": 12,
            "description": "Resolves the given properties when creating an instance of the plugin.\n\nThis is for internal thrust use.  Thrust uses this array to generate the properties that need to be handed\nto the plugin constructor method.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "resolve",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.spa.config",
            "module": "thrust.spa",
            "submodule": "thrust.spa.config"
        },
        {
            "file": "src\\spa\\config.js",
            "line": 25,
            "description": "The set of conventions to load into thrust/mediator.",
            "itemtype": "property",
            "name": "conventions",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.spa.config",
            "module": "thrust.spa",
            "submodule": "thrust.spa.config"
        },
        {
            "file": "src\\spa\\config.js",
            "line": 36,
            "description": "Defines the value of custom parameters.\nYou can also define custom parameters to be a regular expression, and then use them in your routes",
            "itemtype": "property",
            "name": "params",
            "readonly": "",
            "type": "{Object}",
            "class": "thrust.spa.config",
            "module": "thrust.spa",
            "submodule": "thrust.spa.config"
        },
        {
            "file": "src\\spa\\config.js",
            "line": 45,
            "description": "The predfined routes to be used by spa.",
            "itemtype": "property",
            "name": "routes",
            "readonly": "",
            "type": "{Object}",
            "class": "thrust.spa.config",
            "module": "thrust.spa",
            "submodule": "thrust.spa.config"
        },
        {
            "file": "src\\spa\\config.js",
            "line": 53,
            "description": "The file exstenion that should be removed when resolving routes and starting modules.",
            "itemtype": "property",
            "name": "fileExtension",
            "readonly": "",
            "type": "{String}",
            "class": "thrust.spa.config",
            "module": "thrust.spa",
            "submodule": "thrust.spa.config"
        },
        {
            "file": "src\\spa\\main.js",
            "line": 99,
            "description": "Start the single page app router.",
            "itemtype": "method",
            "name": "start",
            "class": "thrust.spa.SinglePageApp",
            "module": "thrust.spa"
        },
        {
            "file": "src\\spa\\main.js",
            "line": 115,
            "description": "Hands the navigate method off to the module, so any module can trigger a navigation event.",
            "itemtype": "method",
            "name": "createFacade",
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance",
                    "type": "thrust.Thrust"
                },
                {
                    "name": "module",
                    "description": "The module to create the facade for",
                    "type": "thrust.Module"
                },
                {
                    "name": "facades",
                    "description": "The facades already added for this module.",
                    "type": "Object"
                }
            ],
            "class": "thrust.spa.SinglePageApp",
            "module": "thrust.spa"
        },
        {
            "file": "src\\spa\\main.js",
            "line": 132,
            "description": "Navigates to the given url.",
            "itemtype": "method",
            "name": "navigate",
            "params": [
                {
                    "name": "location",
                    "description": "The location to navigate to.",
                    "type": "String"
                }
            ],
            "class": "thrust.spa.SinglePageApp",
            "module": "thrust.spa"
        },
        {
            "file": "src\\spa\\main.js",
            "line": 144,
            "description": "Configures the route object for the spa instance\n\nRoutes can be in 4 forms\n\n    {\n        '/path/to/:foo': 'path/to/module',\n        '/path/to/:bar': ['path/to/module1', 'path/to/module2'],\n        '/path/to/:fb': { path: 'path/to/module', args: ['args', 'to', 'hand off to start'] }\n        '/path/to/:foo/:bar': function(foo, bar){  custom handler }\n    }",
            "itemtype": "method",
            "name": "configureRoutes",
            "params": [
                {
                    "name": "routes",
                    "description": "Object of routes.",
                    "type": "Object"
                }
            ],
            "class": "thrust.spa.SinglePageApp",
            "module": "thrust.spa"
        },
        {
            "file": "src\\spa\\main.js",
            "line": 194,
            "itemtype": "method",
            "name": "__moduleStartCallback",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "modules",
                    "description": "String to start a single module, Array to start many modules, Object to start a module with specific arguments.",
                    "type": "String | Array | Object"
                }
            ],
            "class": "thrust.spa.SinglePageApp",
            "module": "thrust.spa"
        },
        {
            "file": "src\\template\\convention\\knockout.engine.js",
            "line": 107,
            "description": "# __thrust/template__ Convention - Knockout Engine\n\nThe knockout engine convention is less of a convention and instead introduces a new custom knockout template engine\nThis engine takes the the same template path, that you'd use to fetch a template instead of the dom id, to fetch the template\nwhen using knockout templates by name.\n\n\nThis allows you to follow the same convention in both your modules, as you would your views and templates.",
            "itemtype": "property",
            "name": "templates",
            "class": "thrust.template.convention",
            "module": "thrust.template",
            "submodule": "thrust.template.convention"
        },
        {
            "file": "src\\template\\convention\\template.js",
            "line": 15,
            "description": "# __thrust/template__ Convention - Templates\n\nThe `templates` convention takes a list of template paths, that need to be fetched for this module.\nWhen the module starts, the templates will be fetched automatically by the modules code, in addition\nthe template ready method will be held until all the templates have returned with a value.\n\n\nWhen the templates have been resolved, your module will have an object on it with the values of the templates location.\nIn addition the templates object will have a get, fetch and has method, to get different templates if required further\ndown the line.",
            "itemtype": "property",
            "name": "templates",
            "class": "thrust.template.convention",
            "module": "thrust.template",
            "submodule": "thrust.template.convention"
        },
        {
            "file": "src\\template\\config.js",
            "line": 12,
            "description": "Resolves the given properties when creating an instance of the plugin.\n\nThis is for internal thrust use.  Thrust uses this array to generate the properties that need to be handed\nto the plugin constructor method.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "resolve",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.template.config",
            "module": "thrust.template",
            "submodule": "thrust.template.config"
        },
        {
            "file": "src\\template\\config.js",
            "line": 25,
            "description": "The set of conventions to load into thrust/template.",
            "itemtype": "property",
            "name": "conventions",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.template.config",
            "module": "thrust.template",
            "submodule": "thrust.template.config"
        },
        {
            "file": "src\\template\\config.js",
            "line": 36,
            "description": "Maps the available templates, to their appropriate module name.\n\n**precompiled is a special case, and those methods are expected to be code built functions.",
            "itemtype": "property",
            "name": "types",
            "readonly": "",
            "type": "{Object}",
            "class": "thrust.template.config",
            "module": "thrust.template",
            "submodule": "thrust.template.config"
        },
        {
            "file": "src\\template\\config.js",
            "line": 49,
            "description": "Maps the template evaluators, so that when creating a template for knockout, it knows how to properly output the information.",
            "itemtype": "property",
            "name": "evaluators",
            "readonly": "",
            "type": "{Object}",
            "class": "thrust.template.config",
            "module": "thrust.template",
            "submodule": "thrust.template.config"
        },
        {
            "file": "src\\template\\config.js",
            "line": 59,
            "description": "The default template type, used when extension isn't given.",
            "itemtype": "property",
            "name": "defaultType",
            "readonly": "",
            "type": "{String}",
            "default": "'doT'",
            "class": "thrust.template.config",
            "module": "thrust.template",
            "submodule": "thrust.template.config"
        },
        {
            "file": "src\\template\\config.js",
            "line": 68,
            "description": "The base location, relative to the application path for template location.\nIf template paths are given relative to application path, this can be left empty.",
            "itemtype": "property",
            "name": "baseUrl",
            "readonly": "",
            "type": "{String}",
            "default": "''",
            "class": "thrust.template.config",
            "module": "thrust.template",
            "submodule": "thrust.template.config"
        },
        {
            "file": "src\\template\\config.js",
            "line": 78,
            "description": "Defines the extension used for templates stored on the server.",
            "itemtype": "property",
            "name": "extension",
            "readonly": "",
            "type": "{String}",
            "default": "'.tmpl'",
            "class": "thrust.template.config",
            "module": "thrust.template",
            "submodule": "thrust.template.config"
        },
        {
            "file": "src\\template\\main.js",
            "line": 88,
            "description": "Gets a template from the cache if it has been fetched. False otherwise.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "name",
                    "description": "The template name to try and get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The template object",
                "type": "Function"
            },
            "class": "thrust.template.Template",
            "module": "thrust.template"
        },
        {
            "file": "src\\template\\main.js",
            "line": 96,
            "description": "Gets a template from the cache if it has been fetched. False otherwise.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "name",
                    "description": "The template name to try and get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The template object",
                "type": "Function"
            },
            "class": "thrust.template.TemplateFacade",
            "module": "thrust.template"
        },
        {
            "file": "src\\template\\main.js",
            "line": 115,
            "description": "Sets a template to the cache, with the given information",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "name",
                    "description": "The template name",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The template engine type",
                    "type": "String"
                },
                {
                    "name": "compiledTemplate",
                    "description": "The compiled template method",
                    "type": "Function"
                },
                {
                    "name": "html",
                    "description": "The template HTML.",
                    "type": "String"
                }
            ],
            "class": "thrust.template.Template",
            "module": "thrust.template"
        },
        {
            "file": "src\\template\\main.js",
            "line": 142,
            "description": "Checks if the template exists in the cache.",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "name",
                    "description": "The template name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Wether the template exists or not.",
                "type": "Boolean"
            },
            "class": "thrust.template.Template",
            "module": "thrust.template"
        },
        {
            "file": "src\\template\\main.js",
            "line": 150,
            "description": "Checks if the template exists in the cache.",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "name",
                    "description": "The template name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Wether the template exists or not.",
                "type": "Boolean"
            },
            "class": "thrust.template.TemplateFacade",
            "module": "thrust.template"
        },
        {
            "file": "src\\template\\main.js",
            "line": 163,
            "description": "Creates a new template given the information",
            "itemtype": "method",
            "name": "newTemplate",
            "params": [
                {
                    "name": "name",
                    "description": "The template name",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The template engine type",
                    "type": "String"
                },
                {
                    "name": "html",
                    "description": "The template HTML.",
                    "type": "String"
                },
                {
                    "name": "engine",
                    "description": "The template engine",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The new template instance.",
                "type": "Object"
            },
            "class": "thrust.template.Template",
            "module": "thrust.template"
        },
        {
            "file": "src\\template\\main.js",
            "line": 193,
            "description": "Compiles a template given the html and the engine type.",
            "itemtype": "method",
            "name": "compile",
            "params": [
                {
                    "name": "html",
                    "description": "The html to generate the template from",
                    "type": "String"
                },
                {
                    "name": "engine",
                    "description": "The template engine that is being used.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The compiled template method",
                "type": "Function"
            },
            "class": "thrust.template.Template",
            "module": "thrust.template"
        },
        {
            "file": "src\\template\\main.js",
            "line": 215,
            "description": "Fetchs a template from the server, or template store.",
            "itemtype": "method",
            "name": "fetch",
            "params": [
                {
                    "name": "name",
                    "description": "The template name",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The template type if not the default",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The promise for when the template has been loaded.",
                "type": "Promise"
            },
            "class": "thrust.template.Template",
            "module": "thrust.template"
        },
        {
            "file": "src\\template\\main.js",
            "line": 224,
            "description": "Fetchs a template from the server, or template store.",
            "itemtype": "method",
            "name": "fetch",
            "params": [
                {
                    "name": "name",
                    "description": "The template name",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The template type if not the default",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The promise for when the template has been loaded.",
                "type": "Promise"
            },
            "class": "thrust.template.TemplateFacade",
            "module": "thrust.template"
        },
        {
            "file": "src\\template\\main.js",
            "line": 277,
            "description": "Creates a new template from the given DOM Node",
            "itemtype": "method",
            "name": "createFromDomNode",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "element",
                    "description": "THe dome element.",
                    "type": "Node"
                }
            ],
            "class": "thrust.template.Template",
            "module": "thrust.template"
        },
        {
            "file": "src\\template\\main.js",
            "line": 318,
            "itemtype": "method",
            "name": "createFacade",
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance",
                    "type": "thrust.Thrust"
                },
                {
                    "name": "module",
                    "description": "The module to create the facade for",
                    "type": "thrust.Module"
                },
                {
                    "name": "facades",
                    "description": "The facades already added for this module.",
                    "type": "Object"
                }
            ],
            "class": "thrust.template.Template",
            "module": "thrust.template"
        },
        {
            "file": "src\\util\\array.js",
            "line": 9,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#first](http://underscorejs.org/#first)",
            "itemtype": "method",
            "name": "first",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 17,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#first](http://underscorejs.org/#first)",
            "itemtype": "method",
            "name": "head",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 24,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#initial](http://underscorejs.org/#initial)",
            "itemtype": "method",
            "name": "initial",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 31,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#last](http://underscorejs.org/#last)",
            "itemtype": "method",
            "name": "last",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 38,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#rest](http://underscorejs.org/#rest)",
            "itemtype": "method",
            "name": "tail",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 45,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#rest](http://underscorejs.org/#rest)",
            "itemtype": "method",
            "name": "rest",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 52,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#compact](http://underscorejs.org/#compact)",
            "itemtype": "method",
            "name": "compact",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 59,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#flatten](http://underscorejs.org/#flatten)",
            "itemtype": "method",
            "name": "flatten",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 66,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#without](http://underscorejs.org/#without)",
            "itemtype": "method",
            "name": "without",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 73,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#union](http://underscorejs.org/#union)",
            "itemtype": "method",
            "name": "union",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 80,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#intersection](http://underscorejs.org/#intersection)",
            "itemtype": "method",
            "name": "intersection",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 87,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#difference](http://underscorejs.org/#difference)",
            "itemtype": "method",
            "name": "difference",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 94,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#uniq](http://underscorejs.org/#uniq)",
            "itemtype": "method",
            "name": "uniq",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 101,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#uniq](http://underscorejs.org/#uniq)",
            "itemtype": "method",
            "name": "unique",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 108,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#zip](http://underscorejs.org/#zip)",
            "itemtype": "method",
            "name": "zip",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 115,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#indexOf](http://underscorejs.org/#indexOf)",
            "itemtype": "method",
            "name": "indexOf",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 122,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#lastIndexOf](http://underscorejs.org/#lastIndexOf)",
            "itemtype": "method",
            "name": "lastIndexOf",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\array.js",
            "line": 129,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#range](http://underscorejs.org/#range)",
            "itemtype": "method",
            "name": "range",
            "class": "thrust.util.array",
            "module": "thrust.util",
            "submodule": "thrust.util.array"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 10,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#each](http://underscorejs.org/#each)",
            "itemtype": "method",
            "name": "each",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 18,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#each](http://underscorejs.org/#each)",
            "itemtype": "method",
            "name": "forEach",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 25,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#map](http://underscorejs.org/#map)",
            "itemtype": "method",
            "name": "map",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 32,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#map](http://underscorejs.org/#map)",
            "itemtype": "method",
            "name": "collect",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 39,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#reduce](http://underscorejs.org/#reduce)",
            "itemtype": "method",
            "name": "reduce",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 46,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#reduce](http://underscorejs.org/#reduce)",
            "itemtype": "method",
            "name": "inject",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 53,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#reduce](http://underscorejs.org/#reduce)",
            "itemtype": "method",
            "name": "foldl",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 60,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#reduceRight](http://underscorejs.org/#reduceRight)",
            "itemtype": "method",
            "name": "foldr",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 67,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#reduceRight](http://underscorejs.org/#reduceRight)",
            "itemtype": "method",
            "name": "reduceRight",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 74,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#find](http://underscorejs.org/#find)",
            "itemtype": "method",
            "name": "find",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 81,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#find](http://underscorejs.org/#find)",
            "itemtype": "method",
            "name": "detect",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 88,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#filter](http://underscorejs.org/#filter)",
            "itemtype": "method",
            "name": "filter",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 95,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#filter](http://underscorejs.org/#filter)",
            "itemtype": "method",
            "name": "select",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 102,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#reject](http://underscorejs.org/#reject)",
            "itemtype": "method",
            "name": "reject",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 109,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#all](http://underscorejs.org/#all)",
            "itemtype": "method",
            "name": "all",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 116,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#all](http://underscorejs.org/#all)",
            "itemtype": "method",
            "name": "every",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 123,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#any](http://underscorejs.org/#any)",
            "itemtype": "method",
            "name": "any",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 130,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#any](http://underscorejs.org/#any)",
            "itemtype": "method",
            "name": "some",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 137,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#include](http://underscorejs.org/#include)",
            "itemtype": "method",
            "name": "include",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 144,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#include](http://underscorejs.org/#include)",
            "itemtype": "method",
            "name": "contains",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 151,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#invoke](http://underscorejs.org/#invoke)",
            "itemtype": "method",
            "name": "invoke",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 158,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#pluck](http://underscorejs.org/#pluck)",
            "itemtype": "method",
            "name": "pluck",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 165,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#max](http://underscorejs.org/#max)",
            "itemtype": "method",
            "name": "max",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 172,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#min](http://underscorejs.org/#min)",
            "itemtype": "method",
            "name": "min",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 179,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#sortBy](http://underscorejs.org/#sortBy)",
            "itemtype": "method",
            "name": "sortBy",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 186,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#groupBy](http://underscorejs.org/#groupBy)",
            "itemtype": "method",
            "name": "groupBy",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 193,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#sortedIndex](http://underscorejs.org/#sortedIndex)",
            "itemtype": "method",
            "name": "sortedIndex",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 200,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#shuffle](http://underscorejs.org/#shuffle)",
            "itemtype": "method",
            "name": "shuffle",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 207,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#toArray](http://underscorejs.org/#toArray)",
            "itemtype": "method",
            "name": "toArray",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 214,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#size](http://underscorejs.org/#size)",
            "itemtype": "method",
            "name": "size",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\collection.js",
            "line": 221,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#extend](http://underscorejs.org/#extend)",
            "itemtype": "method",
            "name": "extend",
            "class": "thrust.util.collection",
            "module": "thrust.util",
            "submodule": "thrust.util.collection"
        },
        {
            "file": "src\\util\\function.js",
            "line": 9,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#bind](http://underscorejs.org/#bind)",
            "itemtype": "method",
            "name": "bind",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 17,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#bindAll](http://underscorejs.org/#bindAll)",
            "itemtype": "method",
            "name": "bindAll",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 24,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#memoize](http://underscorejs.org/#memoize)",
            "itemtype": "method",
            "name": "memoize",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 31,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#delay](http://underscorejs.org/#delay)",
            "itemtype": "method",
            "name": "delay",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 38,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#defer](http://underscorejs.org/#defer)",
            "itemtype": "method",
            "name": "defer",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 45,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#throttle](http://underscorejs.org/#throttle)",
            "itemtype": "method",
            "name": "throttle",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 52,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#debounce](http://underscorejs.org/#debounce)",
            "itemtype": "method",
            "name": "debounce",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 59,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#once](http://underscorejs.org/#once)",
            "itemtype": "method",
            "name": "once",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 66,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#after](http://underscorejs.org/#after)",
            "itemtype": "method",
            "name": "after",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 73,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#wrap](http://underscorejs.org/#wrap)",
            "itemtype": "method",
            "name": "wrap",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 80,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#compose](http://underscorejs.org/#compose)",
            "itemtype": "method",
            "name": "compose",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 87,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#uniqueId](http://underscorejs.org/#uniqueId)",
            "itemtype": "method",
            "name": "uniqueId",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 94,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#escape](http://underscorejs.org/#escape)",
            "itemtype": "method",
            "name": "escape",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 101,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#result](http://underscorejs.org/#result)",
            "itemtype": "method",
            "name": "result",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 111,
            "description": "A function that does nothing, or no operation.  Hence the name noop.",
            "itemtype": "method",
            "name": "noop",
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 118,
            "description": "Attempts to invoke, similar to _.invoke, but in this case it verifies that the property exist,\n    and also verifies that it is a function, and not the noop method available in thrust.\n\n    The intent is a method that allows override of functions, without creating custom code.",
            "itemtype": "method",
            "name": "saveInvoke",
            "params": [
                {
                    "name": "collection",
                    "description": "The container that has the items",
                    "type": "Array|Object"
                },
                {
                    "name": "method",
                    "description": "The method name on every item, or the method to invoke against each item.",
                    "type": "String|Function"
                },
                {
                    "name": "args",
                    "description": "The additional arguments to pass onto the method.",
                    "type": "Object",
                    "optional": true,
                    "multiple": true
                }
            ],
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 169,
            "description": "Constructor used to beget objects that wire needs to create using new.",
            "params": [
                {
                    "name": "ctor",
                    "description": "real constructor to be invoked",
                    "type": "Function"
                },
                {
                    "name": "args",
                    "description": "arguments to be supplied to ctor",
                    "type": "Array"
                }
            ],
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\function.js",
            "line": 179,
            "description": "Creates an object by either invoking ctor as a function and returning the result,\nor by calling new ctor().  It uses a simple heuristic to try to guess which approach\nis the \"right\" one.",
            "params": [
                {
                    "name": "ctor",
                    "description": "function or constructor to invoke",
                    "type": "Function"
                },
                {
                    "name": "args",
                    "description": "array of arguments to pass to ctor in either case",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The result of invoking ctor with args, with or without new, depending on\nthe strategy selected."
            },
            "class": "thrust.util.func",
            "module": "thrust.util",
            "submodule": "thrust.util.func"
        },
        {
            "file": "src\\util\\guid.js",
            "line": 18,
            "description": "Returns a new sudo guid, limiations in JavaScript make must more reliable guids fairly difficult to create.",
            "itemtype": "method",
            "name": "newGuid",
            "return": {
                "description": "The new guid.",
                "type": "Guid"
            },
            "class": "thrust.util",
            "module": "thrust.util",
            "submodule": "thrust.util"
        },
        {
            "file": "src\\util\\guid.js",
            "line": 26,
            "description": "Returns an empty guid.",
            "itemtype": "method",
            "name": "emptyGuid",
            "return": {
                "description": "The emtpty guid.",
                "type": "Guid"
            },
            "class": "thrust.util",
            "module": "thrust.util",
            "submodule": "thrust.util"
        },
        {
            "file": "src\\util\\guid.js",
            "line": 33,
            "description": "Checks if the given string is a guid.",
            "itemtype": "method",
            "name": "isGuid",
            "params": [
                {
                    "name": "guid",
                    "description": "",
                    "type": "Guid"
                }
            ],
            "return": {
                "description": "If the guid is a guid or not.",
                "type": "Boolean"
            },
            "class": "thrust.util",
            "module": "thrust.util",
            "submodule": "thrust.util"
        },
        {
            "file": "src\\util\\guid.js",
            "line": 44,
            "description": "Checks if the Guid is an Empty Guid",
            "itemtype": "method",
            "name": "isGuidEmpty",
            "params": [
                {
                    "name": "guid",
                    "description": "",
                    "type": "Guid"
                }
            ],
            "return": {
                "description": "If the guid is a guid or not.",
                "type": "Boolean"
            },
            "class": "thrust.util",
            "module": "thrust.util",
            "submodule": "thrust.util"
        },
        {
            "file": "src\\util\\main.js",
            "line": 36,
            "description": "Reference to lodash",
            "itemtype": "property",
            "name": "_",
            "type": "{_}",
            "class": "thrust.util",
            "module": "thrust.util"
        },
        {
            "file": "src\\util\\main.js",
            "line": 42,
            "description": "Reference to array methods",
            "itemtype": "property",
            "name": "array",
            "type": "{Object}",
            "class": "thrust.util",
            "module": "thrust.util"
        },
        {
            "file": "src\\util\\main.js",
            "line": 48,
            "description": "Reference to collection methods",
            "itemtype": "property",
            "name": "collection",
            "type": "{Object}",
            "class": "thrust.util",
            "module": "thrust.util"
        },
        {
            "file": "src\\util\\main.js",
            "line": 54,
            "description": "Reference to function methods",
            "itemtype": "property",
            "name": "function",
            "type": "{Object}",
            "class": "thrust.util",
            "module": "thrust.util"
        },
        {
            "file": "src\\util\\main.js",
            "line": 60,
            "description": "Reference to object methods",
            "itemtype": "property",
            "name": "obj",
            "type": "{Object}",
            "class": "thrust.util",
            "module": "thrust.util"
        },
        {
            "file": "src\\util\\main.js",
            "line": 66,
            "description": "Reference to type methods",
            "itemtype": "property",
            "name": "type",
            "type": "{Object}",
            "class": "thrust.util",
            "module": "thrust.util"
        },
        {
            "file": "src\\util\\object.js",
            "line": 9,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#keys](http://underscorejs.org/#keys)",
            "itemtype": "method",
            "name": "keys",
            "class": "thrust.util.obj",
            "module": "thrust.util",
            "submodule": "thrust.util.obj"
        },
        {
            "file": "src\\util\\object.js",
            "line": 17,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#values](http://underscorejs.org/#values)",
            "itemtype": "method",
            "name": "values",
            "class": "thrust.util.obj",
            "module": "thrust.util",
            "submodule": "thrust.util.obj"
        },
        {
            "file": "src\\util\\object.js",
            "line": 24,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#functions](http://underscorejs.org/#functions)",
            "itemtype": "method",
            "name": "functions",
            "class": "thrust.util.obj",
            "module": "thrust.util",
            "submodule": "thrust.util.obj"
        },
        {
            "file": "src\\util\\object.js",
            "line": 31,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#functions](http://underscorejs.org/#functions)",
            "itemtype": "method",
            "name": "methods",
            "class": "thrust.util.obj",
            "module": "thrust.util",
            "submodule": "thrust.util.obj"
        },
        {
            "file": "src\\util\\object.js",
            "line": 38,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#pick](http://underscorejs.org/#pick)",
            "itemtype": "method",
            "name": "pick",
            "class": "thrust.util.obj",
            "module": "thrust.util",
            "submodule": "thrust.util.obj"
        },
        {
            "file": "src\\util\\object.js",
            "line": 45,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#defaults](http://underscorejs.org/#defaults)",
            "itemtype": "method",
            "name": "defaults",
            "class": "thrust.util.obj",
            "module": "thrust.util",
            "submodule": "thrust.util.obj"
        },
        {
            "file": "src\\util\\object.js",
            "line": 52,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#clone](http://underscorejs.org/#clone)",
            "itemtype": "method",
            "name": "clone",
            "class": "thrust.util.obj",
            "module": "thrust.util",
            "submodule": "thrust.util.obj"
        },
        {
            "file": "src\\util\\object.js",
            "line": 59,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#tap](http://underscorejs.org/#tap)",
            "itemtype": "method",
            "name": "tap",
            "class": "thrust.util.obj",
            "module": "thrust.util",
            "submodule": "thrust.util.obj"
        },
        {
            "file": "src\\util\\object.js",
            "line": 66,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#has](http://underscorejs.org/#has)",
            "itemtype": "method",
            "name": "has",
            "class": "thrust.util.obj",
            "module": "thrust.util",
            "submodule": "thrust.util.obj"
        },
        {
            "file": "src\\util\\object.js",
            "line": 75,
            "description": "Inverts an object.  The keys become values, and the values become keys.\nDoes not do any copying.",
            "itemtype": "method",
            "name": "invert",
            "params": [
                {
                    "name": "obj",
                    "description": "The object to invert.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The inverted object.",
                "type": "Object"
            },
            "class": "thrust.util.obj",
            "module": "thrust.util",
            "submodule": "thrust.util.obj"
        },
        {
            "file": "src\\util\\string.js",
            "line": 30,
            "description": "C# style string format.",
            "itemtype": "method",
            "name": "format",
            "class": "thrust.util",
            "module": "thrust.util"
        },
        {
            "file": "src\\util\\type.js",
            "line": 10,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isEqual](http://underscorejs.org/#isEqual)",
            "itemtype": "method",
            "name": "isEqual",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 18,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isEmpty](http://underscorejs.org/#isEmpty)",
            "itemtype": "method",
            "name": "isEmpty",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 25,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isElement](http://underscorejs.org/#isElement)",
            "itemtype": "method",
            "name": "isElement",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 32,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isArray](http://underscorejs.org/#isArray)",
            "itemtype": "method",
            "name": "isArray",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 39,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isObject](http://underscorejs.org/#isObject)",
            "itemtype": "method",
            "name": "isObject",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 46,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isArguments](http://underscorejs.org/#isArguments)",
            "itemtype": "method",
            "name": "isArguments",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 53,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isFunction](http://underscorejs.org/#isFunction)",
            "itemtype": "method",
            "name": "isFunction",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 60,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isString](http://underscorejs.org/#isString)",
            "itemtype": "method",
            "name": "isString",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 67,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isNumber](http://underscorejs.org/#isNumber)",
            "itemtype": "method",
            "name": "isNumber",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 74,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isFinite](http://underscorejs.org/#isFinite)",
            "itemtype": "method",
            "name": "isFinite",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 81,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isBoolean](http://underscorejs.org/#isBoolean)",
            "itemtype": "method",
            "name": "isBoolean",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 88,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isDate](http://underscorejs.org/#isDate)",
            "itemtype": "method",
            "name": "isDate",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 95,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isRegExp](http://underscorejs.org/#isRegExp)",
            "itemtype": "method",
            "name": "isRegExp",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 102,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isNaN](http://underscorejs.org/#isNaN)",
            "itemtype": "method",
            "name": "isNaN",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 109,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isNull](http://underscorejs.org/#isNull)",
            "itemtype": "method",
            "name": "isNull",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 116,
            "description": "This method is an underscore/lodash helper.\nFor documentation please see [http://underscorejs.org/#isUndefined](http://underscorejs.org/#isUndefined)",
            "itemtype": "method",
            "name": "isUndefined",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 126,
            "description": "Returns the type of the given Object\n\nNOTE: currently this type has been loaded from jQuery source code.",
            "itemtype": "method",
            "name": "type",
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 134,
            "description": "Checks is the object is array like, like the aruguments object, but not a string, oe array.\njQuery objects for example would report as array like.\nAs well as knockout observable arrays report as array like.",
            "itemtype": "method",
            "name": "isArrayLike",
            "params": [
                {
                    "name": "o",
                    "description": "The object to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Is it true or false.",
                "type": "Boolean"
            },
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\type.js",
            "line": 147,
            "description": "Checks if the given object is array or array like.",
            "itemtype": "method",
            "name": "isArrayOrArrayLike",
            "params": [
                {
                    "name": "o",
                    "description": "The object to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Is it true or false.",
                "type": "Boolean"
            },
            "class": "thrust.util.type",
            "module": "thrust.util",
            "submodule": "thrust.util.type"
        },
        {
            "file": "src\\util\\url.js",
            "line": 14,
            "description": "jQuery param method to encode form parameters.",
            "itemtype": "method",
            "name": "param",
            "class": "thrust.util.url",
            "module": "thrust.util",
            "submodule": "thrust.util.url"
        },
        {
            "file": "src\\util\\url.js",
            "line": 21,
            "description": "Cleans up double slashs in a url, used by thrust/data",
            "itemtype": "method",
            "name": "cleanUrl",
            "params": [
                {
                    "name": "url",
                    "description": "The url to clean",
                    "type": "String"
                }
            ],
            "retrusn": "{String} The cleaned url",
            "class": "thrust.util.url",
            "module": "thrust.util",
            "submodule": "thrust.util.url"
        },
        {
            "file": "src\\util\\url.js",
            "line": 29,
            "description": "Checks for existance of application path in the url, or http if the url is supposed to go to another location.",
            "itemtype": "method",
            "name": "fixupUrl",
            "params": [
                {
                    "name": "url",
                    "description": "The url to fixup",
                    "type": "String"
                }
            ],
            "retrusn": "{String} The fixed url",
            "class": "thrust.util.url",
            "module": "thrust.util",
            "submodule": "thrust.util.url"
        },
        {
            "file": "src\\util\\when.js",
            "line": 14,
            "description": "when.apply, used to apply when results over a function, similar to jQuerys Deferred.\nSee for more information: [https://github.com/cujojs/when/wiki/when-apply](https://github.com/cujojs/when/wiki/when-apply)",
            "itemtype": "method",
            "name": "when.apply",
            "class": "thrust.util.when",
            "module": "thrust.util",
            "submodule": "thrust.util.when"
        },
        {
            "file": "src\\util\\when.js",
            "line": 22,
            "description": "when.delay, creates a promise that resolves in x ms, using setTimeout.\nSee for more information: [https://github.com/cujojs/when/wiki/when-delay](https://github.com/cujojs/when/wiki/when-delay)",
            "itemtype": "method",
            "name": "when.delay",
            "class": "thrust.util.when",
            "module": "thrust.util",
            "submodule": "thrust.util.when"
        },
        {
            "file": "src\\util\\when.js",
            "line": 29,
            "description": "when.timeout, creates a promise that will timeout if x ms if not resolved.\nSee for more information: [https://github.com/cujojs/when/wiki/when-timeout](https://github.com/cujojs/when/wiki/when-timeout)",
            "itemtype": "method",
            "name": "when.timeout",
            "class": "thrust.util.when",
            "module": "thrust.util",
            "submodule": "thrust.util.when"
        },
        {
            "file": "src\\util\\when.js",
            "line": 51,
            "description": "Access to whenjs, the main library for promises.",
            "itemtype": "method",
            "name": "when",
            "class": "thrust.util.when",
            "module": "thrust.util",
            "submodule": "thrust.util.when"
        },
        {
            "file": "src\\util\\when.js",
            "line": 57,
            "description": "Flatten and filter arrays down to just the existing promises.",
            "itemtype": "method",
            "name": "flattenToPromises",
            "params": [
                {
                    "name": "Array",
                    "description": "to flatten, and filter.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array of Promises"
            },
            "class": "thrust.util.when",
            "module": "thrust.util",
            "submodule": "thrust.util.when"
        },
        {
            "file": "src\\config.js",
            "line": 13,
            "description": "This property, tells the framework if it should throw errors or not.\nIn production it's recommended not to throw errors, that way if a component fails\nthere is a chance the application can still recover.",
            "itemtype": "property",
            "name": "throwErrors",
            "readonly": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\config.js",
            "line": 25,
            "description": "Tells the framework to run in async mode, this may delay start up, but will make image loading and inital running appear faster.",
            "itemtype": "property",
            "name": "async",
            "readonly": "",
            "type": "{Boolean}",
            "default": "true",
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\config.js",
            "line": 34,
            "description": "Tells thrust to expose each instance as a global, this allows legacy components to utilize parts of thrust, or easily\nget at your thrust instance during debugging.",
            "itemtype": "property",
            "name": "exposeGlobals",
            "readonly": "",
            "type": "{Boolean}",
            "default": "true",
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\config.js",
            "line": 45,
            "description": "This property, gives the framework it's default path, if different than '/'",
            "itemtype": "property",
            "name": "url.path",
            "readonly": "",
            "type": "{String}",
            "default": "\"/\"",
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\config.js",
            "line": 54,
            "description": "This property, tells the framework how it should encode array form data.\nIn general, for ASP.NET based applications, traditional should be true.\nFor Ruby/Python based applications, this should be false.",
            "itemtype": "property",
            "name": "url.traditionalEncoding",
            "readonly": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\config.js",
            "line": 67,
            "description": "This lends to the log level of thrust.\n\n    ERROR: 1\n    WARN: 2\n    INFO: 3\n    DEBUG: 4",
            "itemtype": "property",
            "name": "log.level",
            "readonly": "",
            "type": "{String}",
            "default": "1",
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\config.js",
            "line": 81,
            "description": "This toggles enabling on or off.",
            "itemtype": "property",
            "name": "log.enabled",
            "readonly": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\config.js",
            "line": 91,
            "description": "Plugins for thrust to load, override with your own set if you have a different set.",
            "itemtype": "property",
            "name": "plugins",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\config.js",
            "line": 99,
            "description": "The set of modules to preload with the inital wireup of the Thrust instance.\n\nAccepts the module path a string or the module as an object in the following format.\n  Where args will be handed off to the module life cycle methods.\n\n   {\n       path: '',\n       args: []\n   }",
            "itemtype": "property",
            "name": "modules",
            "readonly": "",
            "type": "{Array}",
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\config.js",
            "line": 115,
            "description": "Used internally by thrust to determine if the life-cycle is controlled by thrust, or a parent instance.",
            "itemtype": "property",
            "name": "childInstance",
            "readonly": "",
            "type": "{Boolean}",
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\config.js",
            "line": 123,
            "description": "Used internally by thrust to determine if thrust should control the life-cycle, or the consumer",
            "itemtype": "property",
            "name": "automaticLifecycle",
            "readonly": "",
            "type": "{Boolean}",
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\config.js",
            "line": 133,
            "description": "AMD API\nload\n\nHandles fetching of a current config for the current thrust instance, or the config of the given plugin.\nAdding the : character requests a specific config plugin.\nthrust/config!global = thrust!global:config = Thrust instance config from the instance named global.",
            "itemtype": "method",
            "name": "load",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance that is being fetched",
                    "type": "String"
                },
                {
                    "name": "parentRequire",
                    "description": "the require method to be loaded",
                    "type": "Function"
                },
                {
                    "name": "load",
                    "description": "Allows the load to inform that AMD for the value to hand off",
                    "type": "Function"
                },
                {
                    "name": "config",
                    "description": "The custom configuration.",
                    "type": "Object"
                }
            ],
            "class": "thrust.config",
            "module": "thrust",
            "submodule": "thrust.config"
        },
        {
            "file": "src\\convention.js",
            "line": 28,
            "description": "These properties are stripped off of any module, and held in a private space for other convention methods to use.",
            "itemtype": "property",
            "name": "properties",
            "optional": 1,
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\convention.js",
            "line": 34,
            "description": "This is called during create of a module, generally used to create a facade, that is then bound to the module.",
            "itemtype": "method",
            "name": "create",
            "optional": 1,
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance.",
                    "type": "Thrust"
                },
                {
                    "name": "module",
                    "description": "The module instance.",
                    "type": "Module"
                },
                {
                    "name": "facades",
                    "description": "All the facades already attached to the module.",
                    "type": "Object"
                }
            ],
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\convention.js",
            "line": 43,
            "description": "This method is called during the thrust init phase, or an individual module's init phase",
            "itemtype": "method",
            "name": "init",
            "optional": 1,
            "params": [
                {
                    "name": "facades",
                    "description": "The facades for the module.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise may be returned, to delay the next phase from begining.",
                "type": "Promise"
            },
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\convention.js",
            "line": 52,
            "description": "This method is called during the thrust start phase, or an individual module's start phase",
            "itemtype": "method",
            "name": "start",
            "optional": 1,
            "params": [
                {
                    "name": "facades",
                    "description": "The facades for the module.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise may be returned, to delay the next phase from begining.",
                "type": "Promise"
            },
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\convention.js",
            "line": 61,
            "description": "This method is called during the thrust ready phase, or an individual module's ready phase",
            "itemtype": "method",
            "name": "ready",
            "optional": 1,
            "params": [
                {
                    "name": "facades",
                    "description": "The facades for the module.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise may be returned, to delay the next phase from begining.",
                "type": "Promise"
            },
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\convention.js",
            "line": 70,
            "description": "This method is called during the thrust stop phase, or an individual module's stop phase",
            "itemtype": "method",
            "name": "stop",
            "optional": 1,
            "params": [
                {
                    "name": "facades",
                    "description": "The facades for the module.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise may be returned, to delay the next phase from begining.",
                "type": "Promise"
            },
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\convention.js",
            "line": 79,
            "description": "This method is called during the thrust destroy phase, or an individual module's destroy phase",
            "itemtype": "method",
            "name": "destroy",
            "optional": 1,
            "params": [
                {
                    "name": "facades",
                    "description": "The facades for the module.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise may be returned, to delay the next phase from begining.",
                "type": "Promise"
            },
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\convention.js",
            "line": 88,
            "description": "This is called during the init phase of a Thrust instance.",
            "itemtype": "method",
            "name": "countdown",
            "optional": 1,
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance.",
                    "type": "Thrust"
                }
            ],
            "return": {
                "description": "A promise may be returned, to delay the next phase from begining.",
                "type": "Promise"
            },
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\convention.js",
            "line": 96,
            "description": "This is called during the start phase of a Thrust instance.",
            "itemtype": "method",
            "name": "ignite",
            "optional": 1,
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance.",
                    "type": "Thrust"
                }
            ],
            "return": {
                "description": "A promise may be returned, to delay the next phase from begining.",
                "type": "Promise"
            },
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\convention.js",
            "line": 104,
            "description": "This is called during the ready phase of a Thrust instance.",
            "itemtype": "method",
            "name": "orbit",
            "optional": 1,
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance.",
                    "type": "Thrust"
                }
            ],
            "return": {
                "description": "A promise may be returned, to delay the next phase from begining.",
                "type": "Promise"
            },
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\convention.js",
            "line": 112,
            "description": "This is called during the stop phase of a Thrust instance.",
            "itemtype": "method",
            "name": "deorbit",
            "optional": 1,
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance.",
                    "type": "Thrust"
                }
            ],
            "return": {
                "description": "A promise may be returned, to delay the next phase from begining.",
                "type": "Promise"
            },
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\convention.js",
            "line": 120,
            "description": "This is called during the destroy phase of a Thrust instance.",
            "itemtype": "method",
            "name": "splashdown",
            "optional": 1,
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance.",
                    "type": "Thrust"
                }
            ],
            "return": {
                "description": "A promise may be returned, to delay the next phase from begining.",
                "type": "Promise"
            },
            "class": "thrust.Convention",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 34,
            "description": "Normalizes the given events to the expected namespace.",
            "itemtype": "method",
            "name": "normalizeEvents",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "events",
                    "description": "The events delimited by a space",
                    "type": "String"
                },
                {
                    "name": "namespace",
                    "description": "The namespace, including prefixed '.'",
                    "type": "String"
                }
            ],
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 52,
            "description": "Trigger one or many events, firing all bound callbacks. Callbacks are\npassed the same arguments as `trigger` is, apart from the event name\n(unless you're listening on `\"all\"`, which will cause your callback to\nreceive the true name of the event as the first argument).",
            "itemtype": "method",
            "name": "_trigger",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "async",
                    "description": "Fire event async or sync",
                    "type": "Boolean"
                },
                {
                    "name": "events",
                    "description": "The events to be fired.\n    delimited by a space.",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "The arguments to pass onto the callback methods.",
                    "optional": true,
                    "multiple": true
                }
            ],
            "return": {
                "description": "If async then returns a Promise, where the first argument contains all the returned values, as an array\n         If sync then returns an array of the return values.\n         If more than one event, returns an object of arrays or promises, with the key for each event."
            },
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 89,
            "description": "Triggers all events on a node.\nAlso unbinds any node that is set to only be called once.",
            "itemtype": "method",
            "name": "triggerNodes",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "that",
                    "description": "The event container context.",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "The event to be bound or unbound.",
                    "type": "String"
                },
                {
                    "name": "async",
                    "description": "Fire event async or sync",
                    "type": "Boolean"
                },
                {
                    "name": "node",
                    "description": "The node linked list.",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "The arguments to pass onto the triggered nodes",
                    "type": "Array"
                }
            ],
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 120,
            "description": "Invokes a trigger callback",
            "itemtype": "method",
            "name": "triggerCallback",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "async",
                    "description": "Fire event async or sync",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "The callback method",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The calling context",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "The arguments to call the callback with.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The returned value.\n    For async calls, this is a promise\n    For sync calls this is the value from the method.",
                "type": "Object"
            },
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 146,
            "description": "Creates an async event handler",
            "itemtype": "method",
            "name": "asyncEventFactory",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback method",
                    "type": "Function"
                },
                {
                    "name": "that",
                    "description": "The calling context",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "The arguments to call the callback with.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The callback for the given arguments.",
                "type": "Function"
            },
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 164,
            "description": "Resubscribes to the appropriate events",
            "itemtype": "method",
            "name": "_offProcessNode",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "that",
                    "description": "The event context",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "The event",
                    "type": "String"
                },
                {
                    "name": "node",
                    "description": "The node linked list.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The event callback to unsubscribe",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "The event context to unsubscribe",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "namespace",
                    "description": "The namespace to unsubscribe",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 192,
            "description": "Gets the namespace information, the real event to pass back onto the methods.",
            "itemtype": "method",
            "name": "getNamespaceData",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "The event to capture namespace data from.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Containing event and namespace.",
                "type": "Object"
            },
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 222,
            "description": "Bind one or more space separated events, `events`, to a `callback`\nfunction. Passing `\"all\"` will bind the callback to all events fired.",
            "itemtype": "method",
            "name": "subscribe",
            "params": [
                {
                    "name": "events",
                    "description": "Spave seperated events",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback method to be called when the events are fired.",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context to bind the calling function to.",
                    "type": "Object"
                },
                {
                    "name": "once",
                    "description": "Call this event only once.",
                    "type": "Boolean"
                }
            ],
            "chainable": 1,
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 261,
            "description": "Bind one or more space separated events, `events`, to a `callback`\nfunction. Passing `\"all\"` will bind the callback to all events fired.\n\nEach event will only be called once.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "events",
                    "description": "Spave seperated events",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback method to be called when the events are fired.",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context to bind the calling function to.",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 277,
            "description": "Remove one or many callbacks. If `context` is null, removes all callbacks\nwith that function. If `callback` is null, removes all callbacks for the\nevent. If `event` is null, removes all bound callbacks for all events.",
            "itemtype": "method",
            "name": "unsubscribe",
            "params": [
                {
                    "name": "events",
                    "description": "Spave seperated events",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback method to be called when the events are fired.",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The context to bind the calling function to.",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 367,
            "description": "Trigger one or many events, firing all bound callbacks. Callbacks are\npassed the same arguments as `trigger` is, apart from the event name\n(unless you're listening on `\"all\"`, which will cause your callback to\nreceive the true name of the event as the first argument).",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "events",
                    "description": "The events to be fired.\n    delimited by a space.",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "The arguments to pass onto the callback methods.",
                    "optional": true,
                    "multiple": true
                }
            ],
            "return": {
                "description": "If more than on event is fired, an Object of Arrays is returned.",
                "type": "Array of Values"
            },
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 385,
            "description": "Init's the Event module.\nThis is only required if you wish to use fire.async, and namespacing.",
            "itemtype": "method",
            "name": "initEvents",
            "chainable": 1,
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 402,
            "description": "Extends Events into the given object.",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "to",
                    "description": "The object ot extend events onto",
                    "type": "Object"
                },
                {
                    "name": "init",
                    "description": "Optionally init the events.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 418,
            "description": "Trigger one or many events, firing all bound callbacks. Callbacks are\npassed the same arguments as `trigger` is, apart from the event name\n(unless you're listening on `\"all\"`, which will cause your callback to\nreceive the true name of the event as the first argument).\n\nfire.async runs its events immediately.",
            "itemtype": "method",
            "name": "fire.async",
            "params": [
                {
                    "name": "events",
                    "description": "The events to be fired.\n    delimited by a space.",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "The arguments to pass onto the callback methods.",
                    "optional": true,
                    "multiple": true
                }
            ],
            "async": 1,
            "return": {
                "description": "If more than on event is fired, an Object of Promise Arrays is returned.",
                "type": "Array of Promise"
            },
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 433,
            "description": "Trigger one or many events, firing all bound callbacks. Callbacks are\npassed the same arguments as `trigger` is, apart from the event name\n(unless you're listening on `\"all\"`, which will cause your callback to\nreceive the true name of the event as the first argument).\n\npublish.async runs its events immediately.\npublish.async is an alias for fire.",
            "itemtype": "method",
            "name": "publish.async",
            "params": [
                {
                    "name": "events",
                    "description": "The events to be fired.\n    delimited by a space.",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "The arguments to pass onto the callback methods.",
                    "optional": true,
                    "multiple": true
                }
            ],
            "async": 1,
            "return": {
                "description": "If more than on event is fired, an Object of Promise Arrays is returned.",
                "type": "Array of Promise"
            },
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\events.js",
            "line": 455,
            "description": "Trigger one or many events, firing all bound callbacks. Callbacks are\npassed the same arguments as `trigger` is, apart from the event name\n(unless you're listening on `\"all\"`, which will cause your callback to\nreceive the true name of the event as the first argument).\n\npublish is an alias for fire.",
            "itemtype": "method",
            "name": "publish",
            "params": [
                {
                    "name": "events",
                    "description": "The events to be fired.\n    delimited by a space.",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "The arguments to pass onto the callback methods.",
                    "optional": true,
                    "multiple": true
                }
            ],
            "return": {
                "description": "If async then returns a Promise, where the first argument contains all the returned values, as an array\n         If sync then returns an array of the return values.\n         If more than one event, returns an object of arrays or promises, with the key for each event."
            },
            "class": "thrust.Events",
            "module": "thrust"
        },
        {
            "file": "src\\facade.js",
            "line": 61,
            "description": "Facade init\n\nCalled during the init phase of a module startup.",
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "Promise any facade method may optionally return a promise to delay the start of the next phase."
            },
            "class": "thrust.Facade",
            "module": "thrust"
        },
        {
            "file": "src\\facade.js",
            "line": 70,
            "description": "Facade start\n\nCalled during the start phase of a module startup.",
            "itemtype": "method",
            "name": "start",
            "return": {
                "description": "Promise any facade method may optionally return a promise to delay the start of the next phase."
            },
            "class": "thrust.Facade",
            "module": "thrust"
        },
        {
            "file": "src\\facade.js",
            "line": 79,
            "description": "Facade ready\n\nCalled during the ready phase of a module startup.",
            "itemtype": "method",
            "name": "ready",
            "return": {
                "description": "Promise any facade method may optionally return a promise to delay the start of the next phase."
            },
            "class": "thrust.Facade",
            "module": "thrust"
        },
        {
            "file": "src\\facade.js",
            "line": 88,
            "description": "Facade stop\n\nCalled during the init phase of a module startup.",
            "itemtype": "method",
            "name": "stop",
            "return": {
                "description": "Promise any facade method may optionally return a promise to delay the start of the next phase."
            },
            "class": "thrust.Facade",
            "module": "thrust"
        },
        {
            "file": "src\\facade.js",
            "line": 97,
            "description": "Facade destroy\n\nCalled during the destroy phase of a module startup.",
            "itemtype": "method",
            "name": "destroy",
            "return": {
                "description": "Promise any facade method may optionally return a promise to delay the start of the next phase."
            },
            "class": "thrust.Facade",
            "module": "thrust"
        },
        {
            "file": "src\\facade.js",
            "line": 107,
            "description": "AMD API\nload\n\nHandles fetching of a module instance\n\nFormat:\nthrust/module!{instance}:{pluginName}:{hashKey}\n\nhasKey: is a unique key, that the module shares with the facade, allows for defining dependencies\n            in your define block, and get access to the modules facade.",
            "itemtype": "method",
            "name": "load",
            "static": 1,
            "obsolete": "",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance that is being fetched",
                    "type": "String"
                },
                {
                    "name": "parentRequire",
                    "description": "the require method to be loaded",
                    "type": "Function"
                },
                {
                    "name": "load",
                    "description": "Allows the load to inform that AMD for the value to hand off",
                    "type": "Function"
                },
                {
                    "name": "config",
                    "description": "The custom configuration.",
                    "type": "Object"
                }
            ],
            "class": "thrust.Facade",
            "module": "thrust"
        },
        {
            "file": "src\\ignite.js",
            "line": 49,
            "description": "Merges a all the plugins configurations, with the default config, and then finally with\nany customized config from requirejs",
            "itemtype": "method",
            "name": "stageOne",
            "params": [
                {
                    "name": "settings",
                    "description": "The settints to pass onto the thrust instance being created.",
                    "type": "Object"
                }
            ],
            "class": "thrust.instance",
            "module": "thrust"
        },
        {
            "file": "src\\ignite.js",
            "line": 87,
            "description": "Creates a thrust instance, from the given settings.\nIncluding the plugins.",
            "itemtype": "method",
            "name": "stateTwo",
            "params": [
                {
                    "name": "settings",
                    "description": "The settints to pass onto the thrust instance being created.",
                    "type": "Object"
                }
            ],
            "class": "thrust.instance",
            "module": "thrust"
        },
        {
            "file": "src\\ignite.js",
            "line": 224,
            "description": "Loads up the default modules as indicated to thrust.",
            "itemtype": "method",
            "name": "stageThree",
            "params": [
                {
                    "name": "context",
                    "description": "The context to use to load the modules.",
                    "type": "Object"
                }
            ],
            "class": "thrust.instance",
            "module": "thrust"
        },
        {
            "file": "src\\instance.js",
            "line": 11,
            "description": "The available thrust instances\nindex by name",
            "itemtype": "property",
            "name": "instances",
            "access": "private",
            "tagname": "",
            "class": "thrust.instance",
            "module": "thrust"
        },
        {
            "file": "src\\instance.js",
            "line": 20,
            "description": "The loading thurst instances.\nindex by name",
            "itemtype": "property",
            "name": "loadingInstances",
            "access": "private",
            "tagname": "",
            "class": "thrust.instance",
            "module": "thrust"
        },
        {
            "file": "src\\instance.js",
            "line": 28,
            "description": "Gets a named thrust stance if it exists.",
            "itemtype": "method",
            "name": "getInstance",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The instance name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The thrust instance",
                "type": "Thrust"
            },
            "class": "thrust.instance",
            "module": "thrust"
        },
        {
            "file": "src\\instance.js",
            "line": 40,
            "description": "Fetchs a named thrust stance if it exists.\nThis loads asyncronously, as the instance may not be loaded",
            "itemtype": "method",
            "name": "__fetchInstance",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "name",
                    "description": "The instance name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "To a thrust instance spec",
                "type": "Promise"
            },
            "class": "thrust.instance",
            "module": "thrust"
        },
        {
            "file": "src\\log.js",
            "line": 61,
            "description": "Logs a debug type message using the console log method",
            "itemtype": "method",
            "name": "debug",
            "class": "thrust.Log",
            "module": "thrust"
        },
        {
            "file": "src\\log.js",
            "line": 78,
            "description": "Logs a info type message using the console info method if available, otherwise it uses the console log method.",
            "itemtype": "method",
            "name": "info",
            "class": "thrust.Log",
            "module": "thrust"
        },
        {
            "file": "src\\log.js",
            "line": 95,
            "description": "Logs a warn type message using the console warn method if available, otherwise it uses the console log method.",
            "itemtype": "method",
            "name": "warn",
            "class": "thrust.Log",
            "module": "thrust"
        },
        {
            "file": "src\\log.js",
            "line": 112,
            "description": "Logs a error type message using the console error method if available, otherwise it uses the console log method.",
            "itemtype": "method",
            "name": "error",
            "class": "thrust.Log",
            "module": "thrust"
        },
        {
            "file": "src\\log.js",
            "line": 129,
            "description": "Logs a time type message using the console time method if available, otherwise it uses the console log method.",
            "itemtype": "method",
            "name": "time",
            "class": "thrust.Log",
            "module": "thrust"
        },
        {
            "file": "src\\log.js",
            "line": 149,
            "description": "Logs a timeEnd type message using the console timeEnd method if available, otherwise it uses the console log method.\nCauses the timer to end, for the given message.",
            "itemtype": "method",
            "name": "timeEnd",
            "class": "thrust.Log",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 235,
            "description": "Required methods, that every module must implement.",
            "itemtype": "property",
            "name": "__requiredMethods",
            "access": "protected",
            "tagname": "",
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 247,
            "description": "Creates a new thrust module.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "name",
                    "description": "The unique module name.",
                    "type": "String"
                },
                {
                    "name": "module",
                    "description": "The module defintion.",
                    "type": "Object"
                },
                {
                    "name": "preBuild",
                    "description": "Has this module been prebuilt, in other words has it been created, by wire.js and needs to be injected.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The new module instance.",
                "type": "Module"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 289,
            "description": "Begins the countdown to thrusts start.\nLoading can be deferred by returning a promise from any convention, or module method.",
            "itemtype": "method",
            "name": "countdown",
            "async": 1,
            "params": [
                {
                    "name": "ignoreChild",
                    "description": "Ignores the child instance flag, allows children to be controlled.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The promise of when the countdown is completed.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 318,
            "description": "Begins the ingition as thrust starts up.\nLoading can be deferred by returning a promise from any convention, or module method.",
            "itemtype": "method",
            "name": "ignite",
            "async": 1,
            "params": [
                {
                    "name": "ignoreChild",
                    "description": "Ignores the child instance flag, allows children to be controlled.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The promise of when the ingition is completed.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 347,
            "description": "Thrust prepares for orbit.\nLoading can be deferred by returning a promise from any convention.",
            "itemtype": "method",
            "name": "orbit",
            "async": 1,
            "params": [
                {
                    "name": "ignoreChild",
                    "description": "Ignores the child instance flag, allows children to be controlled.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The promise of when thrust is in orbit.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 380,
            "description": "Thrust deploys components in orbit\nLoading can be deferred by returning a promise from any module method.",
            "itemtype": "method",
            "name": "deploy",
            "async": 1,
            "params": [
                {
                    "name": "ignoreChild",
                    "description": "Ignores the child instance flag, allows children to be controlled.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The promise of when thrust has fully deployed.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 435,
            "description": "Begins the deorbit as thrust shutdown.\nShutdown can be deferred by returning a promise from any convention, or module method.",
            "itemtype": "method",
            "name": "deorbit",
            "async": 1,
            "params": [
                {
                    "name": "ignoreChild",
                    "description": "Ignores the child instance flag, allows children to be controlled.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The promise of when the ingition is completed.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 464,
            "description": "Begins the splashdown as thrust shutdown.\nShutdown can be deferred by returning a promise from any convention, or module method.",
            "itemtype": "method",
            "name": "splashdown",
            "async": 1,
            "params": [
                {
                    "name": "ignoreChild",
                    "description": "Ignores the child instance flag, allows children to be controlled.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The promise of when the ingition is completed.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 495,
            "description": "Begins the initalization process for a module.  This runs as part of the\n    countdown phase, during start up, or in order, when creating modules.\nLoading can be deferred by returning a promise from any convention, or module method.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the module.  If name is null, all modules\nthat return the property autoStart will be inited.",
                    "type": "String|Array of String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The promise of when the init is completed.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 521,
            "description": "Begins the startup process for a module.  This runs as part of the\n    ignite phase, during start up, or in order, when creating modules.\nLoading can be deferred by returning a promise from any convention, or module method.",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the module.  If name is null, all modules\nthat return the property autoStart will be started.",
                    "type": "String|Array of String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The promise of when the init is completed.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 583,
            "description": "Begins the ready process for a module.  This runs as part of the\n    orbit phase, during ready, or in order, when creating modules.\nLoading can be deferred by returning a promise from any convention, or module method.",
            "itemtype": "method",
            "name": "ready",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the module.  If name is null, all modules\nthat return the property autoStart will be started.",
                    "type": "String|Array of String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The promise of when the init is completed.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 620,
            "description": "Begins the stop process for a module.  This runs as part of the\n    deorbit phase, during stop, or in order, when creating modules.\nLoading can be deferred by returning a promise from any convention, or module method.",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the module.  If name is null, all modules\nwill be stopped.",
                    "type": "String|Array of String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The promise of when the stop is completed.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 644,
            "description": "Begins the destroy process for a module.  This runs as part of the\n    slashdown phase, during destroy, or in order, when creating modules.\nLoading can be deferred by returning a promise from any convention, or module method.",
            "itemtype": "method",
            "name": "destroy",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the module.  If name is null, all modules\nwill be destroyed.",
                    "type": "String|Array of String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The promise of when the destroy is completed.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 682,
            "description": "Injects a preconstructed module into the thrust instance.",
            "itemtype": "method",
            "name": "__injectModule",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "module",
                    "description": "The module to inject.",
                    "type": "Module"
                }
            ],
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 693,
            "description": "Creates a module from the given definition object, with the given name.",
            "itemtype": "method",
            "name": "createModule",
            "params": [
                {
                    "name": "name",
                    "description": "The module name",
                    "type": "String"
                },
                {
                    "name": "moduleDefn",
                    "description": "The module definition",
                    "type": "Object"
                }
            ],
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 711,
            "description": "Launches another child module for thrust.",
            "itemtype": "method",
            "name": "spawn",
            "params": [
                {
                    "name": "settings",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The promise that resolves once the child instance has fully loaded.  Resolves with the context that contains the thrust instance and all plugins that were loaded.",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 729,
            "description": "Registers a specific module name, and arguments.  The arguments will be used when initantiating the module.",
            "itemtype": "method",
            "name": "registerModule",
            "params": [
                {
                    "name": "name",
                    "description": "The module name to assign the arguments with.",
                    "type": "String"
                },
                {
                    "name": "arguments,",
                    "description": "additional arguments that will be passed onto the moudle",
                    "type": "Object*"
                }
            ],
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 745,
            "description": "Initalizes a new Thrust instance based on the given settings.",
            "itemtype": "method",
            "name": "launch",
            "static": 1,
            "params": [
                {
                    "name": "settings",
                    "description": "The module to inject",
                    "type": "Object"
                }
            ],
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 809,
            "description": "Gets a named thrust stance if it exists.",
            "itemtype": "method",
            "name": "getInstance",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The instance name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The thrust instance",
                "type": "Thrust"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 822,
            "description": "Fetchs a named thrust stance if it exists.\nThis loads asyncronously, as the instance may not be loaded",
            "itemtype": "method",
            "name": "__fetchInstance",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "name",
                    "description": "The instance name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "To a thrust instance spec",
                "type": "Promise"
            },
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 837,
            "description": "Creates a new module and hands it off to the given instance, if that instance exists.",
            "itemtype": "method",
            "name": "createModule",
            "static": 1,
            "params": [
                {
                    "name": "instanceName",
                    "description": "The thrust instance name",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "The module name",
                    "type": "String"
                },
                {
                    "name": "moduleDefn",
                    "description": "The module definition",
                    "type": "Object"
                }
            ],
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 857,
            "description": "Lists the module registrations.",
            "itemtype": "property",
            "name": "__moduleRegistrations",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 866,
            "description": "Registers a specific module name, and arguments.  The arguments will be used when initantiating the module.",
            "itemtype": "method",
            "name": "registerModule",
            "static": 1,
            "params": [
                {
                    "name": "instanceName",
                    "description": "The thrust instance the module is to be associated with.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "The module name to assign the arguments with.",
                    "type": "String"
                },
                {
                    "name": "arguments,",
                    "description": "additional arguments that will be passed onto the moudle",
                    "type": "Object*"
                }
            ],
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 891,
            "description": "Gets the modules arguments from the registrations.\n\nIf original args contains anything it is passed instead of the registrations.\nIf the registrations are in place it will return them.",
            "itemtype": "method",
            "name": "__getModuleArgs",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "instanceName",
                    "description": "The thrust instance",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "The module name",
                    "type": "String"
                },
                {
                    "name": "originalArgs",
                    "description": "The original arguments passed into the calling method.",
                    "type": "Array"
                }
            ],
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\main.js",
            "line": 917,
            "description": "AMD API\nload\n\nHandles fetching of a current thurst instance, by expected name.\nAdding the : character requests a specific plugin.\nthrust!global = Thrust instance\nthrust!global:dom = The thrust dom plugin instance",
            "itemtype": "method",
            "name": "load",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance that is being fetched",
                    "type": "String"
                },
                {
                    "name": "parentRequire",
                    "description": "the require method to be loaded",
                    "type": "Function"
                },
                {
                    "name": "load",
                    "description": "Allows the load to inform that AMD for the value to hand off",
                    "type": "Function"
                },
                {
                    "name": "config",
                    "description": "The custom configuration.",
                    "type": "Object"
                }
            ],
            "class": "thrust.Thrust",
            "module": "thrust"
        },
        {
            "file": "src\\module.js",
            "line": 10,
            "description": "Moves all properties, that should exist outside of the module, into a private object for holding.",
            "itemtype": "method",
            "name": "moveToThrustCache",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "from",
                    "description": "Object to extract items from",
                    "type": "Object"
                },
                {
                    "name": "to",
                    "description": "Object to place items on",
                    "type": "Object"
                },
                {
                    "name": "list",
                    "description": "Items to move from to the other object",
                    "type": "Array"
                }
            ],
            "class": "thrust.Module",
            "module": "thrust"
        },
        {
            "file": "src\\module.js",
            "line": 111,
            "description": "Getter/Setter for convention methods.\nGets the value convention property (defined in the properties array of a facade).\nSets the value of a convention property (for storing convention configuration)",
            "params": [
                {
                    "name": "property",
                    "description": "The property to get or set",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to set",
                    "type": "Object",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "convention",
            "return": {
                "description": "The valaue.",
                "type": "Object"
            },
            "class": "thrust.Module",
            "module": "thrust"
        },
        {
            "file": "src\\module.js",
            "line": 130,
            "description": "Injects this module into the given thrust instance.",
            "itemtype": "method",
            "name": "thrustCreate",
            "params": [
                {
                    "name": "thrust",
                    "description": "The thrust instance.",
                    "type": "Thrust"
                }
            ],
            "class": "thrust.Module",
            "module": "thrust"
        },
        {
            "file": "src\\module.js",
            "line": 140,
            "description": "Makes a call to all the modules facades\nThe order of the call depends on the order required.\nDuring the startup stage (init, start, ready) facades are called first.\nDuring the shutdown state (stop, destroy) facades are called last.\nThis allows modules to startup and shutdown will all the tools it had to begin with.",
            "itemtype": "method",
            "name": "thrustCall",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "method",
                    "description": "the method to call",
                    "type": "String"
                },
                {
                    "name": "facadeAfter",
                    "description": "calls facade methods before or after module method.",
                    "type": "Boolean"
                },
                {
                    "name": "args",
                    "description": "Args to be passed onto the module method.",
                    "type": "Array"
                }
            ],
            "class": "thrust.Module",
            "module": "thrust"
        },
        {
            "file": "src\\module.js",
            "line": 211,
            "description": "Start the module, inside the thrust container it was created on.",
            "itemtype": "method",
            "name": "start",
            "class": "thrust.Module",
            "module": "thrust"
        },
        {
            "file": "src\\module.js",
            "line": 221,
            "description": "Stop the module, inside the thrust container it was created on.",
            "itemtype": "method",
            "name": "start",
            "class": "thrust.Module",
            "module": "thrust"
        },
        {
            "file": "src\\module.js",
            "line": 233,
            "description": "AMD API\nload\n\nHandles fetching of a module instance.\nFormat:\nthrust/module!{instance}:{moduleName}",
            "itemtype": "method",
            "name": "load",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance that is being fetched",
                    "type": "String"
                },
                {
                    "name": "parentRequire",
                    "description": "the require method to be loaded",
                    "type": "Function"
                },
                {
                    "name": "load",
                    "description": "Allows the load to inform that AMD for the value to hand off",
                    "type": "Function"
                },
                {
                    "name": "config",
                    "description": "The custom configuration.",
                    "type": "Object"
                }
            ],
            "class": "thrust.Module",
            "module": "thrust"
        }
    ]
}